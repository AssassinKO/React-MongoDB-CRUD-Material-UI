{"version":3,"sources":["redux/actions/level/index.js","redux/actions/user/index.js","views/pages/Tutor/ReportPage/QueryPage.js","views/pages/Tutor/ReportPage/graphs/Assignment.js","views/pages/Tutor/ReportPage/graphs/Exam.js","views/pages/Tutor/ReportPage/ResultPage.js","views/pages/Tutor/ReportPage/Index.js"],"names":["getData","params","dispatch","a","url","page","isNaN","perPage","Axios","get","then","response","type","Types","data","levels","totalPages","catch","displayServerErrorMessage","addData","obj","getState","level","formData","FormData","append","file","name","description","post","doc","displaySuccessMessage","getInitialData","filterData","value","deleteData","delete","_id","deleteDatas","ids","put","relatedData","length","displayInfo","deletedIds","updateData","getMyStudents","users","payload","err","console","log","animatedComponents","makeAnimated","QueryPage","props","state","students","preloadRange","reportYearOptions","label","reportTypesOptions","queryObj","reportType","startDate","endDate","studentLevel","showCustomPeriod","inValid","onQuery","e","preventDefault","isValid","toggle","setState","handleChangeReportYear","aYearAgo","moment","Date","subtract","format","currentDate","sixMonthAgo","firstDay","Object","keys","key","handleCustomFilter","renderRequiredText","text","className","startOf","is","this","getLevels","prevProps","prevState","newQueryObj","studentsOptions","map","student","firstname","lastname","color","isFixed","studentLevelOptions","Form","onSubmit","Row","Col","md","sm","closeMenuOnSelect","components","defaultValue","isMulti","options","classNamePrefix","onChange","values","elt","mode","defaultDate","v","Button","Ripple","size","Component","mapDispatchToProps","connect","mystudents","allData","Assignment","chart","id","xaxis","categories","stroke","curve","dataLabels","enabled","title","align","colors","themeColors","grid","row","opacity","series","Card","CardBody","height","Homework","ResultPage","active","selectedYear","selectedDateType","dateTypes","yearsList","tab","i","getFullYear","push","String","xs","TabPane","tabId","Nav","tabs","NavItem","NavLink","classnames","onClick","TabContent","activeTab","year","ReportIndex","inVisibleResult","setVisibleResult","Fragment","CardHeader","CardTitle","disabled","toggleIndex","React"],"mappings":"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","file":"static/js/29.cc44d1d7.chunk.js","sourcesContent":["import { history } from \"../../../history\";\r\nimport * as Types from \"../types\";\r\nimport { Axios } from \"../root\"\r\nimport { displayServerErrorMessage, displayInfo, displaySuccessMessage } from '../../../service/Alert';\r\n\r\n\r\nexport const getData = (params) => {\r\n  return async dispatch => {\r\n    var url = \"\";\r\n    if(params && params.page) {\r\n      if(isNaN(params.page)) {\r\n        params.page = 1\r\n      }\r\n      if(isNaN(params.perPage)) {\r\n        params.perPage = 4\r\n      }\r\n      url = `/levels?page=${params.page}&perPage=${params.perPage}`;\r\n    } else {\r\n      url = `/levels?page=1&perPage=4`;\r\n    }\r\n    await Axios.get(url)\r\n      .then(response => {\r\n        dispatch({\r\n          type: Types.FETCH_LEVELS,\r\n          data: response.data.levels,\r\n          totalPages: response.data.totalPages,\r\n          params\r\n        })\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n\r\nexport const addData = (obj) => {\r\n  return (dispatch, getState) => {\r\n    let params = getState().level.params;\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', obj.file);\r\n    formData.append('name', obj.name)\r\n    formData.append('description', obj.description)\r\n\r\n    Axios\r\n      .post(\"/level/create\", formData)\r\n      .then(response => {\r\n        dispatch({ type: Types.ADD_LEVEL, obj: response.data.doc })\r\n        dispatch(getData(params))\r\n        displaySuccessMessage(\"Successfully Submitted\")\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n\r\nexport const getInitialData = () => {\r\n  return async dispatch => {\r\n    await Axios.get(\"/levels\").then(response => {\r\n      dispatch({ type: Types.FETCH_ALL_LEVEL, data: response.data.levels })\r\n    })\r\n  }\r\n}\r\n\r\nexport const filterData = value => {\r\n  return dispatch => dispatch({ type: Types.FILTER_LEVEL , value })\r\n}\r\n\r\nexport const deleteData = obj => {\r\n  return dispatch => {\r\n    \r\n    Axios\r\n      .delete(\"/level/\" + obj._id)\r\n      .then(response => {\r\n        dispatch({ type: Types.DELETE_LEVEL, obj });\r\n        displaySuccessMessage(\"Successfully  deleted!\");\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\nexport const deleteDatas = ids => {\r\n  return dispatch => {\r\n    \r\n    Axios\r\n      .put(\"/levels-delete\", {ids: ids})\r\n      .then(response => {\r\n        if(response.data.relatedData && response.data.relatedData.length > 0) {\r\n          displayInfo(`${response.data.relatedData.length} data has relevant data.`);\r\n        }\r\n        if(response.data.deletedIds.length > 0) {\r\n          displaySuccessMessage(\"Successfully deleted\");\r\n        } \r\n        dispatch({ type: Types.DELETE_LEVELS, ids: response.data.deletedIds });\r\n\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n\r\nexport const updateData = obj => {\r\n  return (dispatch, getState) => {\r\n    const formData = new FormData();\r\n\r\n    formData.append('image', obj.file);\r\n    formData.append('name', obj.name)\r\n    formData.append('description', obj.description);\r\n    let params = getState().level.params;\r\n    Axios\r\n      .put(\"/level/\" + obj._id, formData)\r\n      .then(response => {\r\n        dispatch({ type: Types.UPDATE_LEVEL, obj })\r\n        dispatch(getData(params))\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}","import { history } from \"../../../history\";\r\nimport * as Types from \"../types\";\r\nimport {Axios} from \"../root\"\r\nimport { subRooter } from \"./../../../configs/vars\"\r\n\r\n\r\nexport const getTutors = user => {\r\n  return dispatch => {\r\n    Axios\r\n      .get(\"/tutors\")\r\n      .then(response => {\r\n        if (response.data) {\r\n          var tutors = response.data.tutors;\r\n          dispatch({\r\n            type: Types.FETCH_TEACHERS,\r\n            payload: tutors\r\n          })\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const getMyStudents = () => {\r\n  return dispatch => {\r\n    Axios\r\n      .get(\"/tutor/users\")\r\n      .then(response => {\r\n        if (response.data) {\r\n          var users = response.data.users;\r\n          dispatch({\r\n            type: Types.FETCH_MY_STUDENTS,\r\n            payload: users\r\n          })\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const changeFilter = filter => {\r\n  return dispatch => {\r\n    dispatch({ type: \"CHANGE_FILTER\", filter })\r\n    history.push(`${subRooter}/assign/${filter}`)\r\n    // dispatch(getTodos({ filter }))\r\n  }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport { Row, Col, Button, Form } from \"reactstrap\"\r\nimport Select from \"react-select\"\r\nimport makeAnimated from \"react-select/animated\"\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport \"flatpickr/dist/themes/light.css\";\r\nimport { Star } from 'react-feather'\r\nimport \"../../../../assets/scss/plugins/forms/flatpickr/flatpickr.scss\"\r\nimport moment from \"moment\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { getMyStudents } from \"../../../../redux/actions/user/\"\r\nimport { getInitialData as getLevels } from \"../../../../redux/actions/level\"\r\n\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nexport class QueryPage extends Component {\r\n\tstatic getDerivedStateFromProps(props, state) {\t\t\r\n\t\tif(!Object.is(props.students, state.students)) {\r\n\t\t\treturn {\r\n\t\t\t\tstudents: props.students\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(!Object.is(props.levels, state.levels)) {\r\n\t\t\treturn {\r\n\t\t\t\tlevels: props.levels\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null\r\n\t}\r\n\r\n\tcurrentDate\r\n\tfirstDay\r\n\r\n\tstate = {\r\n\t\tstudents: [],\r\n\t\tlevels: [],\r\n\t\tpreloadRange: '',\r\n\t\treportYearOptions: [\r\n\t\t\t{ value: \"PAST_1_YEAR\", label: \"Past 1 year\"},\r\n\t\t\t{ value: \"PAST_6_MONTH\", label: \"Past 6 month\"},\r\n\t\t\t{ value: \"SELECT_INTERVAL\", label: \"Select Interval\"},\r\n\t\t],\r\n\t\treportTypesOptions: [\r\n\t\t\t{ value: \"Assignment\", label: \"Assignment\"},\r\n\t\t\t{ value: \"Exam\", label: \"Exam\"},\r\n\t\t],\r\n\t\tqueryObj: {\r\n\t\t\tstudents: [], // list of student id\r\n\t\t\treportType: '', // string\r\n\t\t\t// reportPeriod: '', // date,\r\n\t\t\tstartDate: '', // Date,\r\n\t\t\tendDate: '', // Date,\r\n\t\t\tstudentLevel: '', // string\r\n\t\t},\r\n\t\tshowCustomPeriod: false,\r\n\t\tinValid: false\r\n\t}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.currentDate \t= moment(new Date(), 'YYYY-MM-DD', true).format(\"YYYY-MM-DD\");\r\n\t\tthis.firstDay \t\t= moment().startOf('year').format('YYYY-MM-DD');\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getMyStudents();\r\n    this.props.getLevels();\r\n\t}\r\n\r\n\tonQuery = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst { queryObj } = this.state;\r\n\r\n\t\tconsole.log(\"---   queryObj   ---- \", queryObj);\r\n\r\n\t\tif (this.isValid()) {\r\n\t\t\tthis.props.toggle('2');\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tinValid: true\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\t// this.props.setVisibleResult(this.isValid());\r\n\t}\r\n\r\n\thandleChangeReportYear = (type) => {\r\n\t\tlet queryObj = this.state.queryObj;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"PAST_1_YEAR\":\r\n\t\t\t\tlet aYearAgo \t\t\t\t= moment(new Date(), 'YYYY-MM-DD', true).subtract(12, 'M').format(\"YYYY-MM-DD\")\r\n\t\t\t\tqueryObj.startDate \t= aYearAgo\r\n\t\t\t\tqueryObj.endDate \t\t= this.currentDate // need to change\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tqueryObj: queryObj,\r\n\t\t\t\t\tshowCustomPeriod: false\r\n\t\t\t\t})\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"PAST_6_MONTH\":\r\n\t\t\t\tlet sixMonthAgo \t\t= moment(new Date(), 'YYYY-MM-DD', true).subtract(6, 'M').format(\"YYYY-MM-DD\")\r\n\t\t\t\tqueryObj.startDate \t= sixMonthAgo // need to change\r\n\t\t\t\tqueryObj.endDate \t\t= this.currentDate  // need to change\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tqueryObj: queryObj,\r\n\t\t\t\t\tshowCustomPeriod: false\r\n\t\t\t\t})\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"SELECT_INTERVAL\":\r\n\t\t\t\tqueryObj.startDate \t= this.firstDay // need to change\r\n\t\t\t\tqueryObj.endDate \t\t= this.currentDate  // need to change\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tshowCustomPeriod: true,\r\n\t\t\t\t\tqueryObj: queryObj\r\n\t\t\t\t})\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t\t * @param queryObj: object\r\n\t\t * @description\r\n\t\t * check valid\r\n\t*/\r\n\tisValid = () => { \r\n\t\tconst keys = Object.keys(this.state.queryObj);\r\n\t\tfor (const key of keys) {\r\n\t\t\tif(! this.state.queryObj[key]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn true;\r\n\t}\r\n\r\n\thandleCustomFilter = (e) => {\r\n\t\tif(e.length == 2) {\r\n\t\t\tlet startDate \t\t\t= moment(e[0], 'YYYY-MM-DD', true).format(\"YYYY-MM-DD\")\r\n\t\t\tlet endDate \t\t\t\t= moment(e[1], 'YYYY-MM-DD', true).format(\"YYYY-MM-DD\")\r\n\t\t\tlet { queryObj } \t\t= this.state\r\n\t\t\tqueryObj.startDate \t= startDate\r\n\t\t\tqueryObj.endDate \t\t= endDate\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tqueryObj: queryObj\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trenderRequiredText = (text) => (\r\n\t\t<p className='text-danger ml-1'>{text || \"you need to select this option\"}</p>\r\n\t)\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\treportYearOptions,\r\n\t\t\treportTypesOptions,\r\n\t\t\tqueryObj,\r\n\r\n\t\t\tstudents,\r\n\t\t\tlevels,\r\n\t\t\tshowCustomPeriod\r\n\t\t} = this.state\r\n\t\tlet newQueryObj = queryObj;\r\n\r\n\t\tconst studentsOptions = students.map((student) => (\r\n\t\t\t{ value: student._id, label: `${student.firstname} ${student.lastname}`, color: \"#00B8D9\", isFixed: true }\r\n\t\t));\r\n\t\tconst studentLevelOptions = levels.map((level) => (\r\n\t\t\t{ value: level._id, label: level.name}\r\n\t\t))\r\n\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<Form \r\n\t\t\t\t\tonSubmit={this.onQuery}\r\n\t\t\t\t>\r\n\t\t\t\t\t{/* students start */}\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md=\"2\" sm=\"12\">\r\n\t\t\t\t\t\t\t<h5 className=\"text-bold-600 my-1\">Students</h5>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col md=\"6\" sm=\"12\">\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tcloseMenuOnSelect={false}\r\n\t\t\t\t\t\t\t\tcomponents={animatedComponents}\r\n\t\t\t\t\t\t\t\tdefaultValue={[studentsOptions[4], studentsOptions[5]]}\r\n\t\t\t\t\t\t\t\tisMulti\r\n\t\t\t\t\t\t\t\toptions={studentsOptions}\r\n\t\t\t\t\t\t\t\tclassName=\"React\"\t\r\n\t\t\t\t\t\t\t\tclassNamePrefix=\"select\"\r\n\t\t\t\t\t\t\t\tname=\"students\"\r\n\t\t\t\t\t\t\t\tonChange={(values) => {\r\n\t\t\t\t\t\t\t\t\tnewQueryObj[\"students\"] = values.map((elt) => elt.value)\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tqueryObj: newQueryObj\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tqueryObj.students.length === 0 && this.renderRequiredText()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t{/* students end */}\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md=\"2\" sm=\"12\">\r\n\t\t\t\t\t\t\t<h5 className=\"my-1 text-bold-600\">Report Type</h5>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col md=\"4\" sm=\"12\">\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tclassName=\"React\"\r\n\t\t\t\t\t\t\t\tclassNamePrefix=\"select\"\r\n\t\t\t\t\t\t\t\tname=\"reportType\"\r\n\t\t\t\t\t\t\t\toptions={reportTypesOptions}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tnewQueryObj[\"reportType\"] = e.value\r\n\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tqueryObj: newQueryObj\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t{/* Report Year */}\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md=\"2\" sm=\"12\">\r\n\t\t\t\t\t\t\t<h5 className=\"my-1 text-bold-600\">Report Year</h5>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col md=\"4\" sm=\"12\">\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tclassName=\"React\"\r\n\t\t\t\t\t\t\t\tclassNamePrefix=\"select\"\r\n\t\t\t\t\t\t\t\tname=\"report_year\"\r\n\t\t\t\t\t\t\t\toptions={reportYearOptions}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tthis.handleChangeReportYear(e.value);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tshowCustomPeriod && <Col className=\"mb-3\" md=\"4\" sm=\"12\">\t\r\n\t\t\t\t\t\t\t\t\t<Flatpickr\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\toptions={{ \r\n\t\t\t\t\t\t\t\t\t\t\tmode: \"range\",\r\n\t\t\t\t\t\t\t\t\t\t\tdefaultDate: [this.firstDay, this.currentDate]\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleCustomFilter}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md=\"2\" sm=\"12\">\r\n\t\t\t\t\t\t\t<h5 className=\"my-1 text-bold-600\">Student Level</h5>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col md=\"4\" sm=\"12\">\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tclassName=\"React\"\r\n\t\t\t\t\t\t\t\tclassNamePrefix=\"select\"\r\n\t\t\t\t\t\t\t\tdefaultValue={studentLevelOptions[0]}\r\n\t\t\t\t\t\t\t\tname=\"student_level\"\r\n\t\t\t\t\t\t\t\toptions={studentLevelOptions}\r\n\t\t\t\t\t\t\t\tonChange={(v) => {\r\n\t\t\t\t\t\t\t\t\tnewQueryObj.studentLevel = v.value;\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tqueryObj: newQueryObj\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<div className='text-right mt-1'>\r\n\t\t\t\t\t\t<Button.Ripple \r\n\t\t\t\t\t\t\tclassName=\"mr-1 mb-1\" \r\n\t\t\t\t\t\t\tcolor=\"success\"\r\n\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Star size={14} />\r\n\t\t\t\t\t\t\t<span className=\"align-middle ml-25\">Query</span>\r\n\t\t\t\t\t\t</Button.Ripple>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Form>\r\n\t\t\t</Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\tconsole.log(\"---------------------------\");\r\n\tconsole.log(state);\r\n\tconsole.log(\"---------------------------\");\r\n\treturn {\r\n\t\tstudents: state.users.mystudents,\r\n\t\tlevels: state.level.allData\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tgetMyStudents,\r\n\tgetLevels\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (QueryPage)","import React, { Component, Fragment } from 'react'\r\nimport Chart from \"react-apexcharts\"\r\nimport { Card, CardBody } from \"reactstrap\"\r\n\r\nexport class Assignment extends Component {\r\n  state = {\r\n    options: {\r\n      chart: {\r\n        id: \"lineChart\"\r\n      },\r\n      xaxis: {\r\n        categories: [\r\n          \"Jan\",\r\n          \"Feb\",\r\n          \"Mar\",\r\n          \"Apr\",\r\n          \"May\",\r\n          \"Jun\",\r\n          \"Jul\",\r\n          \"Aug\",\r\n          \"Sep\"\r\n        ]\r\n      },\r\n      stroke: {\r\n        curve: \"straight\"\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      title: {\r\n        text: \"Report Assignment\",\r\n        align: \"left\"\r\n      },\r\n      colors: this.props.themeColors,\r\n      grid: {\r\n        row: {\r\n          colors: [\"#f3f3f3\", \"transparent\"],\r\n          opacity: 0.5\r\n        }\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Assigned\",\r\n        data: [10, 41, 35, 51, 49, 62, 69, 91, 148]\r\n      },\r\n      {\r\n        name: \"Done\",\r\n        data: [20, 30, 20, 55, 90, 20, 30, 45, 120]\r\n      }\r\n    ]\r\n  }\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t <Card>\r\n\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t<Chart\r\n\t\t\t\t\t\t\toptions={this.state.options}\r\n\t\t\t\t\t\t\tseries={this.state.series}\r\n\t\t\t\t\t\t\ttype=\"line\"\r\n\t\t\t\t\t\t\theight={450}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</CardBody>\r\n\t\t\t\t</Card>\r\n\t\t\t</Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Assignment\r\n","import React, { Component, Fragment } from 'react'\r\nimport Chart from \"react-apexcharts\"\r\nimport { Card, CardBody } from \"reactstrap\"\r\n\r\nexport class Homework extends Component {\r\n  state = {\r\n    options: {\r\n      chart: {\r\n        id: \"lineChart\"\r\n      },\r\n      xaxis: {\r\n        categories: [\r\n          \"Jan\",\r\n          \"Feb\",\r\n          \"Mar\",\r\n          \"Apr\",\r\n          \"May\",\r\n          \"Jun\",\r\n          \"Jul\",\r\n          \"Aug\",\r\n          \"Sep\"\r\n        ]\r\n      },\r\n      stroke: {\r\n        curve: \"straight\"\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      title: {\r\n        text: \"Report Exam\",\r\n        align: \"left\"\r\n      },\r\n      colors: this.props.themeColors,\r\n      grid: {\r\n        row: {\r\n          colors: [\"#f3f3f3\", \"transparent\"],\r\n          opacity: 0.5\r\n        }\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Assigned\",\r\n        data: [10, 41, 35, 51, 49, 62, 69, 91, 148]\r\n      },\r\n      {\r\n        name: \"Done\",\r\n        data: [20, 30, 20, 55, 90, 20, 30, 45, 120]\r\n      },\r\n      {\r\n        name: \"Stoped\",\r\n        data: [15, 27, 60, 12, 54, 15, 20, 36, 50]\r\n      },\r\n    ]\r\n  }\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t <Card>\r\n\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t<Chart\r\n\t\t\t\t\t\t\toptions={this.state.options}\r\n\t\t\t\t\t\t\tseries={this.state.series}\r\n\t\t\t\t\t\t\ttype=\"line\"\r\n\t\t\t\t\t\t\theight={450}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</CardBody>\r\n\t\t\t\t</Card>\r\n\t\t\t</Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Homework\r\n","import React, { Component, Fragment } from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    TabContent,\r\n    TabPane,\r\n    Nav,\r\n    NavItem,\r\n    NavLink\r\n  } from \"reactstrap\"\r\nimport Select from \"react-select\"\r\nimport Assignment from \"./graphs/Assignment\"\r\nimport Homework from \"./graphs/Exam\"\r\nimport classnames from \"classnames\"\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nexport class ResultPage extends Component {\r\n    state = {\r\n        active: \"1\", // 1 or 2\r\n        selectedYear: '',\r\n        selectedDateType: 'Daily', // Daily | Monthly | Weekly\r\n        dateTypes: [\r\n\t\t\t{ value: \"DAILY\", label: \"Daily\"},\r\n\t\t\t{ value: \"MONTHLY\", label: \"Monthly\"},\r\n\t\t\t{ value: \"WEEKLY\", label: \"Weekly\"},\r\n\t\t],\r\n        yearsList: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        let yearsList = [];\r\n        for(let i = 2019; i < new Date().getFullYear() + 1 ; i++) {\r\n            yearsList.push({ value: String(i), label: String(i)})\r\n        }\r\n        this.setState({\r\n            yearsList\r\n        })\r\n    }\r\n\r\n    toggle = tab => {\r\n        if (this.state.active !== tab) {\r\n          this.setState({ active: tab })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            dateTypes,\r\n            yearsList,\r\n            selectedDateType,\r\n            selectedYear\r\n        } = this.state;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Row>\r\n                    <Col md='2' xs='12' sm='12' className='mt-auto mb-auto pt-5'>\r\n                        <div className='mb-1'>\r\n                            <Select\r\n                                className=\"React\"\r\n                                classNamePrefix=\"select\"\r\n                                name=\"selectedYear\"\r\n                                options={yearsList}\r\n                                onChange={(e) => {\r\n                                    this.setState({\r\n                                        selectedYear: e.value\r\n                                    })\r\n                                }}  \r\n                            />\r\n                        </div>\r\n\r\n                        <div className='mb-1'>\r\n                            <Select\r\n                                className=\"React\"\r\n                                classNamePrefix=\"select\"\r\n                                defaultValue={dateTypes[0]}\r\n                                name=\"reportType\"\r\n                                options={dateTypes}\r\n                                onChange={(e) => {\r\n                                    this.setState({\r\n                                        selectedDateType: e.value\r\n                                    })\r\n                                }}  \r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                    <Col md='10' xs='12' sm='12'>\r\n                        <TabPane tabId=\"1\">\r\n                            <Nav tabs className=\"nav-fill\">\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={classnames({\r\n                                            active: this.state.active === \"1\"\r\n                                        })}\r\n                                        onClick={() => {\r\n                                            this.toggle(\"1\")\r\n                                        }}\r\n                                    >\r\n                                        Assignment\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={classnames({\r\n                                            active: this.state.active === \"2\"\r\n                                        })}\r\n                                        onClick={() => {\r\n                                            this.toggle(\"2\")\r\n                                        }}\r\n                                    >\r\n                                        Exam\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <TabContent className=\"py-50\" activeTab={this.state.active}>\r\n                                <TabPane tabId=\"1\">\r\n                                    <Assignment year={selectedYear} type={selectedDateType} />\r\n                                </TabPane>\r\n                                <TabPane tabId=\"2\">\r\n                                    <Homework year={selectedYear} type={selectedDateType} />\r\n                                </TabPane>\r\n                            </TabContent>\r\n                        </TabPane>\r\n                    </Col>\r\n                </Row>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResultPage","import React from \"react\"\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport QueryPage from \"./QueryPage\"\r\nimport ResultPage from \"./ResultPage\"\r\n\r\nclass ReportIndex extends React.Component {\r\n  state = {\r\n    active: \"1\", // 1 or 2\r\n    inVisibleResult: true\r\n  }\r\n\r\n  toggle = tab => {\r\n    if (this.state.active !== tab) {\r\n      this.setState({ active: tab })\r\n    }\r\n  }\r\n\r\n  setVisibleResult = (value) => {\r\n    this.setState({\r\n      inVisibleResult: value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { inVisibleResult } = this.state\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Report</CardTitle>            \r\n          </CardHeader>\r\n          <CardBody>\r\n              <TabPane tabId=\"1\">\r\n                <Nav tabs className=\"nav-fill\">\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({\r\n                        active: this.state.active === \"1\"\r\n                      })}\r\n                      onClick={() => {\r\n                        this.toggle(\"1\")\r\n                      }}\r\n                    >\r\n                      Query\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className={classnames({\r\n                        active: this.state.active === \"2\"\r\n                      })}\r\n                      onClick={() => {\r\n                        this.toggle(\"2\")\r\n                      }}\r\n                      disabled={inVisibleResult}\r\n                    >\r\n                      Result\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </Nav>   \r\n                <TabContent className=\"py-50\" activeTab={this.state.active}>\r\n                  <TabPane tabId=\"1\">\r\n                    <QueryPage toggle={(toggleIndex) => this.toggle(toggleIndex)} setVisibleResult={this.setVisibleResult} />\r\n                  </TabPane>\r\n                  <TabPane tabId=\"2\">\r\n                    <ResultPage />\r\n                  </TabPane>\r\n                </TabContent>\r\n              </TabPane>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default ReportIndex\r\n"],"sourceRoot":""}