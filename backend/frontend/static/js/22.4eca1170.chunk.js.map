{"version":3,"sources":["components/@vuexy/checkbox/CheckboxesVuexy.js","components/@vuexy/breadCrumbs/BreadCrumb.js","service/helper.js","redux/actions/category/index.js","redux/actions/level/index.js","redux/actions/topic/index.js","redux/actions/classess/QueryBuilder.js","redux/actions/assessment/filterClass.js","redux/actions/assessment/index.js","components/Wrappers/BasicDropZone.js","components/Wrappers/Editor.js","views/pages/AssessmentPage/AssessmentForm.js"],"names":["CheckBoxesVuexy","className","this","props","color","type","defaultChecked","checked","value","disabled","onClick","onChange","size","icon","label","React","Component","BreadCrumbs","breadCrumbTitle","tag","to","subRooter","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","active","breadCrumbActive","matchYMD","date","sub","substr","indexOf","length","split","join","replace","getQueryStringValue","key","decodeURIComponent","window","location","search","RegExp","encodeURIComponent","getData","dispatch","getState","getParentData","Axios","get","then","response","Types","data","parents","addData","obj","formData","FormData","append","file","name","parentId","post","displaySuccessMessage","doc","history","push","catch","err","displayServerErrorMessage","updateData","put","_id","deleteData","delete","params","a","url","page","isNaN","perPage","levels","totalPages","level","description","getInitialData","filterData","deleteDatas","ids","relatedData","displayInfo","deletedIds","topics","getMangementInitialData","topic","usedIds","console","log","getDataByType","QueryBuilder","siteUrl","query","set","field","Filter","buildQuery","question","isMCQ","createdBy","deleted","category","assessments","assessment","videos","youtubeUrl","image","JSON","stringify","MCQs","mark","filterOption","getDatabyFilter","filter","deleteDataByIds","BasicDropzone","useState","files","setFiles","useDropzone","accept","multiple","onDrop","acceptedFiles","map","Object","assign","prevew","URL","createObjectURL","getRootProps","getInputProps","thumbs","controls","src","poster","width","alt","height","useEffect","forEach","revokeObjectURL","onLoadFile","style","placeholder","EditorImage","state","editorState","content","htmlToState","html","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","setState","uploadImageCallBack","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","send","addEventListener","parse","responseText","error","handleUpdate","changedEditorState","draftToHtml","convertToRaw","getCurrentContent","nextProps","Fragment","wrapperClassName","editorClassName","toolbar","inline","inDropdown","list","textAlign","link","uploadCallback","previewImage","present","mandatory","onEditorStateChange","markOptions","AssessmentForm","uploadedImages","uploadedVideos","index","isCorrect","text","isInvalid","selectedLevelId","selectedCategoryId","selectedTopicId","currentData","formtype","initdata","handleOnSubmit","event","preventDefault","isValid","addAssessment","id","handleFiles","handleEditor","strAsHtml","is","handleChange","addNewMCQ","newMCQ","slice","handelChangeMCQValueByIndex","alert","mcqs","handleDeleteMCQByIndex","newMCQs","mcq","i","checkMCQCorrectAnswer","renderCategory","categories","result","isDisabled","children","child","paddingLeft","getLevels","getCategories","getTopics","subjectOptions","levelId","categoryId","elt","levelOptions","categoryOptions","Ripple","outline","onSubmit","md","xs","xl","zIndex","classNamePrefix","options","find","e","sm","for","target","invalid","values","imgUrl","temp","background","test","addonType","MCQ","filteredData","mapDispatchToProps","connect","allData","parentData","dataPerType","allAssessments","queryData"],"mappings":"2KACMA,E,uKAEF,OACE,yBACEC,UAAS,0BACPC,KAAKC,MAAMF,UAAYC,KAAKC,MAAMF,UAAY,GADvC,wBAEOC,KAAKC,MAAMC,QAE3B,2BACEC,KAAK,WACLC,eAAgBJ,KAAKC,MAAMG,eAC3BC,QAASL,KAAKC,MAAMI,QACpBC,MAAON,KAAKC,MAAMK,MAClBC,SAAUP,KAAKC,MAAMM,SACrBC,QAASR,KAAKC,MAAMO,QAAUR,KAAKC,MAAMO,QAAU,KACnDC,SAAUT,KAAKC,MAAMQ,SAAWT,KAAKC,MAAMQ,SAAW,OAExD,0BACEV,UAAS,kCACPC,KAAKC,MAAMS,KAAOV,KAAKC,MAAMS,KAAO,OAGtC,0BAAMX,UAAU,sBAAsBC,KAAKC,MAAMU,OAEnD,8BAAOX,KAAKC,MAAMW,Y,GAxBIC,IAAMC,WA8BrBhB,O,gICjBTiB,E,uKAEF,OACE,yBAAKhB,UAAU,sBACb,yBAAKA,UAAU,4CACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,UACZC,KAAKC,MAAMe,gBACV,wBAAIjB,UAAU,wCACXC,KAAKC,MAAMe,iBAGd,GAEF,yBAAKjB,UAAU,8DACb,kBAAC,IAAD,CAAYkB,IAAI,MACd,kBAAC,IAAD,CAAgBA,IAAI,MAClB,kBAAC,IAAD,CAASC,GAAIC,aACX,kBAAC,IAAD,CAAMpB,UAAU,YAAYW,KAAM,OAMtC,kBAAC,IAAD,CAAgBO,IAAI,KAAKlB,UAAU,gBAChCC,KAAKC,MAAMmB,kBAEbpB,KAAKC,MAAMoB,kBACV,kBAAC,IAAD,CAAgBJ,IAAI,KAAKlB,UAAU,gBAChCC,KAAKC,MAAMoB,mBAGd,GAEDrB,KAAKC,MAAMqB,kBACV,kBAAC,IAAD,CAAgBL,IAAI,KAAKlB,UAAU,gBAChCC,KAAKC,MAAMqB,mBAGd,GAEF,kBAAC,IAAD,CAAgBL,IAAI,KAAKM,QAAM,GAC5BvB,KAAKC,MAAMuB,4B,GA1CNX,IAAMC,WAwFjBC,O,iCCrGf,oEAAO,IAAMU,EAAW,SAACC,GACvB,IAAIC,EAAMD,EAAKE,OAAOF,EAAKG,QAAQ,KAAMH,EAAKI,QAE9C,OADAJ,EAAOA,EAAKK,MAAMJ,GAAKK,KAAK,MAChBC,QAAQ,MAAO,MAGhBC,EAAuB,SAAUC,GAC5C,OAAOC,mBAAmBC,OAAOC,SAASC,OAAON,QAAQ,IAAIO,OAAO,eAAiBC,mBAAmBN,GAAKF,QAAQ,YAAa,QAAU,uBAAwB,KAAM,S,iCCR5K,uNAMaS,EAAU,WACrB,OAAO,SAACC,EAAUC,GAChB,OAAOD,MAIEE,EAAgB,WAC3B,OAAO,SAAAF,GACLG,IAAMC,IAAI,qBACPC,MAAK,SAAAC,GACJN,EAAS,CAAExC,KAAM+C,IAAiCC,KAAMF,EAASE,KAAKC,eAKjEC,EAAU,SAACC,GACtB,OAAO,SAACX,EAAUC,GAChB,IAAMW,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASH,EAAII,MAC7BH,EAASE,OAAO,OAAQH,EAAIK,MAC5BJ,EAASE,OAAO,WAAYH,EAAIM,UAEhCd,IACGe,KAAK,mBAAoBN,GACzBP,MAAK,SAAAC,GACJa,YAAsB,wBACtBnB,EAAS,CAAExC,KAAM+C,IAAoBC,KAAMF,EAASE,KAAKY,MACzDC,IAAQC,KAAR,UAAgB9C,YAAhB,gBACAwB,EAASE,QAEVqB,OAAM,SAACC,GACNC,YAA0BD,QAKrBE,EAAa,SAACf,GACzB,OAAO,SAACX,EAAUC,GAChB,IAAMW,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASH,EAAII,MAC7BH,EAASE,OAAO,OAAQH,EAAIK,MAC5BJ,EAASE,OAAO,WAAYH,EAAIM,UAEhCd,IACGwB,IAAI,aAAehB,EAAIiB,IAAKhB,GAC5BP,MAAK,SAAAC,GACJa,YAAsB,wBACtBnB,EAAS,CAAExC,KAAM+C,MACjBP,EAASE,QAEVqB,OAAM,SAACC,GACNC,YAA0BD,QAKrBK,EAAa,SAAClB,GACzB,OAAO,SAAAX,GACLG,IACG2B,OAAO,aAAenB,EAAIiB,KAC1BvB,MAAK,SAAAC,GACJa,YAAsB,wBACtBnB,EAAS,CAAExC,KAAM+C,IAAuBC,KAAMG,IAC9CX,EAASE,QAEVqB,OAAM,SAACC,GACNC,YAA0BD,S,uUCnErBzB,EAAU,SAACgC,GACtB,8CAAO,WAAM/B,GAAN,eAAAgC,EAAA,6DACDC,EAAM,GACPF,GAAUA,EAAOG,MACfC,MAAMJ,EAAOG,QACdH,EAAOG,KAAO,GAEbC,MAAMJ,EAAOK,WACdL,EAAOK,QAAU,GAEnBH,EAAG,uBAAmBF,EAAOG,KAA1B,oBAA0CH,EAAOK,UAEpDH,EAAG,2BAXA,SAaC9B,IAAMC,IAAI6B,GACb5B,MAAK,SAAAC,GACJN,EAAS,CACPxC,KAAM+C,IACNC,KAAMF,EAASE,KAAK6B,OACpBC,WAAYhC,EAASE,KAAK8B,WAC1BP,cAGHR,MAAME,KAtBJ,2CAAP,uDA0BWf,EAAU,SAACC,GACtB,OAAO,SAACX,EAAUC,GAChB,IAAI8B,EAAS9B,IAAWsC,MAAMR,OAExBnB,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASH,EAAII,MAC7BH,EAASE,OAAO,OAAQH,EAAIK,MAC5BJ,EAASE,OAAO,cAAeH,EAAI6B,aAEnCrC,IACGe,KAAK,gBAAiBN,GACtBP,MAAK,SAAAC,GACJN,EAAS,CAAExC,KAAM+C,IAAiBI,IAAKL,EAASE,KAAKY,MACrDpB,EAASD,EAAQgC,IACjBZ,YAAsB,6BAEvBI,MAAME,OAIAgB,EAAiB,WAC5B,8CAAO,WAAMzC,GAAN,SAAAgC,EAAA,sEACC7B,IAAMC,IAAI,WAAWC,MAAK,SAAAC,GAC9BN,EAAS,CAAExC,KAAM+C,IAAuBC,KAAMF,EAASE,KAAK6B,YAFzD,2CAAP,uDAOWK,EAAa,SAAA/E,GACxB,OAAO,SAAAqC,GAAQ,OAAIA,EAAS,CAAExC,KAAM+C,IAAqB5C,YAG9CkE,EAAa,SAAAlB,GACxB,OAAO,SAAAX,GAELG,IACG2B,OAAO,UAAYnB,EAAIiB,KACvBvB,MAAK,SAAAC,GACJN,EAAS,CAAExC,KAAM+C,IAAoBI,QACrCQ,YAAsB,6BAEvBI,MAAME,OAGAkB,EAAc,SAAAC,GACzB,OAAO,SAAA5C,GAELG,IACGwB,IAAI,iBAAkB,CAACiB,IAAKA,IAC5BvC,MAAK,SAAAC,GACDA,EAASE,KAAKqC,aAAevC,EAASE,KAAKqC,YAAY1D,OAAS,GACjE2D,YAAY,GAAD,OAAIxC,EAASE,KAAKqC,YAAY1D,OAA9B,6BAEVmB,EAASE,KAAKuC,WAAW5D,OAAS,GACnCgC,YAAsB,wBAExBnB,EAAS,CAAExC,KAAM+C,IAAqBqC,IAAKtC,EAASE,KAAKuC,gBAG1DxB,MAAME,OAIAC,EAAa,SAAAf,GACxB,OAAO,SAACX,EAAUC,GAChB,IAAMW,EAAW,IAAIC,SAErBD,EAASE,OAAO,QAASH,EAAII,MAC7BH,EAASE,OAAO,OAAQH,EAAIK,MAC5BJ,EAASE,OAAO,cAAeH,EAAI6B,aACnC,IAAIT,EAAS9B,IAAWsC,MAAMR,OAC9B5B,IACGwB,IAAI,UAAYhB,EAAIiB,IAAKhB,GACzBP,MAAK,SAAAC,GACJN,EAAS,CAAExC,KAAM+C,KAAoBI,QACrCX,EAASD,EAAQgC,OAElBR,MAAME,Q,yWCxGA1B,EAAU,SAACgC,GACtB,8CAAO,WAAO/B,EAAUC,GAAjB,SAAA+B,EAAA,sEAEC7B,IAAMC,IAAN,kCAAqC2B,EAAOG,KAA5C,oBAA4DH,EAAOK,UAAW/B,MAAK,SAAAC,GACvFN,EAAS,CACPxC,KAAM+C,IACNC,KAAMF,EAASE,KAAKwC,OACpBV,WAAYhC,EAASE,KAAK8B,WAC1BP,cAPC,2CAAP,yDAaWkB,EAA0B,WACrC,8CAAO,WAAOjD,EAAUC,GAAjB,SAAA+B,EAAA,sEACC7B,IAAMC,IAAN,sBAAgCC,MAAK,SAAAC,GACzCN,EAAS,CAAExC,KAAM+C,IAAuBC,KAAMF,EAASE,KAAKwC,YAFzD,2CAAP,yDAcWtC,EAAU,SAACC,GACtB,OAAO,SAACX,EAAUC,GAChB,IAAI8B,EAAS9B,IAAWiD,MAAMnB,OAC9B5B,IACGe,KAAK,gBAAiBP,GACtBN,MAAK,SAAAC,GACJa,YAAsB,2BACtBnB,EAASD,EAAQgC,OAElBR,MAAME,OAIAiB,EAAa,SAAA/E,GACxB,OAAO,SAAAqC,GAAQ,OAAIA,EAAS,CAAExC,KAAM+C,IAAqB5C,YAG9CkE,EAAa,SAAAlB,GACxB,OAAO,SAAAX,GAELG,IACG2B,OAAO,UAAYnB,EAAIiB,KACvBvB,MAAK,SAAAC,GACJa,YAAsB,GAAD,OAAIR,EAAIK,KAAR,8BACrBhB,EAAS,CAAExC,KAAM+C,IAAoBI,WAEtCY,MAAME,OAIAkB,EAAc,SAAAC,GACzB,OAAO,SAAC5C,EAAUC,GAChB,IAAI8B,EAAS9B,IAAWiD,MAAMnB,OAC9B5B,IACGwB,IAAI,iBAAkB,CAACiB,IAAKA,IAC5BvC,MAAK,SAAAC,GACDA,EAASE,KAAKuC,WAAW5D,OAAS,GACnCgC,YAAsB,GAAD,OAAIb,EAASE,KAAKuC,WAAW5D,OAA7B,8BAEpBmB,EAASE,KAAK2C,QAAQhE,OAAS,GAChC2D,YAAY,GAAD,OAAIxC,EAASE,KAAK2C,QAAQhE,OAA1B,gDAEVmB,EAASE,KAAKuC,WAAW5D,OAAS,IACnCa,EAASD,EAAQgC,IACjB/B,EAAS,CAAExC,KAAM+C,IAAqBqC,IAAKtC,EAASE,KAAKuC,iBAG5DxB,MAAME,OAIAC,EAAa,SAAAf,GACxB,OAAO,SAACX,EAAUC,GAEhB,IAAI8B,EAAS9B,IAAWiD,MAAMnB,OAE9BqB,QAAQC,IAAI,MAAO1C,GACnBR,IACGwB,IAAI,UAAYhB,EAAIiB,IAAKjB,GACzBN,MAAK,SAAAC,GACJN,EAAS,CAAExC,KAAM+C,KAAoBI,QACrCX,EAASD,EAAQgC,OAElBR,MAAME,OAIA6B,EAAgB,SAAC9F,GAE5B,8CAAO,WAAOwC,GAAP,SAAAgC,EAAA,sEACC7B,IAAMC,IAAN,uBAA0B5C,IAAQ6C,MAAK,SAAAC,GAC3CN,EAAS,CACPxC,KAAM+C,IACNC,KAAMF,EAASE,KAAKwC,YAJnB,2CAAP,wD,6CChFaO,IApBb,WAAYC,GAAU,IAAD,gCAFrBA,QAAU,GAEW,KADrBC,MAAQ,IACa,KAQrBC,IAAM,SAACC,EAAOhG,GACT,EAAK8F,MAAMvE,QAAQ,MAAQ,IAC5B,EAAKuE,OAAS,KAEhB,EAAKA,OAAL,UAAiBE,EAAjB,YAA0BhG,IAZP,KAerByC,IAAM,WACJ,OAAO,EAAKoD,QAAU,EAAKC,OAdzBpG,KAAKmG,QADQ,KAAZA,EACcA,EAEA,K,gaCgDNI,EA3Cb,WAAY7B,GAAS,IAAD,gCAWpB8B,WAAa,WACX,IAAIJ,EAAQ,IAAIF,IAAa,IA2B7B,OA1BG,EAAK3B,KACN6B,EAAMC,IAAI,MAAO,EAAK9B,KAErB,EAAKsB,OACNO,EAAMC,IAAI,QAAS,EAAKR,OAEvB,EAAKX,OACNkB,EAAMC,IAAI,QAAS,EAAKnB,OAEvB,EAAKuB,UACNL,EAAMC,IAAI,WAAY,EAAKI,UAE1B,EAAKC,OACNN,EAAMC,IAAI,QAAS,EAAKK,OAEvB,EAAKC,WACNP,EAAMC,IAAI,YAAa,EAAKM,WAE3B,EAAKC,SACNR,EAAMC,IAAI,UAAW,EAAKO,SAEzB,EAAKC,UACNT,EAAMC,IAAI,WAAY,EAAKQ,UAGdT,EAAMrD,OArCrB/C,KAAKuE,IAAMG,EAAOH,IAClBvE,KAAK6F,MAAQnB,EAAOmB,MACpB7F,KAAKkF,MAAQR,EAAOQ,MACpBlF,KAAKyG,SAAW/B,EAAO+B,SACvBzG,KAAK0G,MAAQhC,EAAOgC,MACpB1G,KAAK2G,UAAYjC,EAAOiC,UACxB3G,KAAK4G,QAAUlC,EAAOkC,QACtB5G,KAAK6G,SAAWnC,EAAOmC,UCbdnE,EAAU,SAACgC,GAMtB,OALc,OAAXA,KACDA,EAAS,IACFG,KAAW,EAClBH,EAAOK,QAAW,GAEpB,uCAAO,WAAOpC,EAAUC,GAAjB,SAAA+B,EAAA,sEACC7B,IAAMC,IAAN,4BAA+B2B,EAAOG,KAAtC,oBAAsDH,EAAOK,UAAW/B,MAAK,SAAAC,GACjFN,EAAS,CACPxC,KAAM+C,IACNC,KAAMF,EAASE,KAAK2D,YACpB7B,WAAYhC,EAASE,KAAK8B,WAC1BP,cANC,2CAAP,yDAYWrB,EAAU,SAACC,GACtB,OAAO,SAACX,EAAUC,GAChB,IAAI8B,EAAS9B,IAAWmE,WAAWrC,OAC/BsC,EAAS1D,EAAI0D,OAEbzD,EAAW,IAAIC,SACnBD,EAASE,OAAO,WAAYH,EAAImD,UAChClD,EAASE,OAAO,QAASH,EAAI4B,OAC7B3B,EAASE,OAAO,aAAcH,EAAI2D,YAClC1D,EAASE,OAAO,SAAUuD,EAAO,IACjCzD,EAASE,OAAO,cAAeH,EAAI6B,aACnC5B,EAASE,OAAO,QAASH,EAAI4D,MAAM,IACnC3D,EAASE,OAAO,QAASH,EAAIuC,OAC7BtC,EAASE,OAAO,QAASH,EAAIoD,OAC7BnD,EAASE,OAAO,OAAQ0D,KAAKC,UAAU9D,EAAI+D,OAC3C9D,EAASE,OAAO,OAAQH,EAAIgE,MAE5BxE,IACGe,KAAK,qBAAsBN,GAC3BP,MAAK,SAAAC,GACJN,EAAS,CAAExC,KAAM+C,IAAsBI,IAAKL,EAASE,KAAKY,MAC1DpB,EAASD,EAAQgC,IACjBZ,YAAsB,uCACtBE,IAAQC,KAAR,UAAgB9C,YAAhB,mBAED+C,MAAME,OAIAgB,EAAiB,WAC5B,8CAAO,WAAOzC,EAAUC,GAAjB,SAAA+B,EAAA,sEACC7B,IAAMC,IAAN,gBAA0BC,MAAK,SAAAC,GACnCN,EAAS,CAAExC,KAAM+C,IAA6BC,KAAMF,EAASE,KAAK2D,iBAF/D,2CAAP,yDAOWzB,EAAa,SAAC/E,EAAOiH,GAChC,OAAO,SAAA5E,GAAQ,OAAIA,EAAS,CAAExC,KAAM+C,IAA0B5C,QAAOiH,mBAG1DlD,EAAa,SAAAf,GACxB,OAAO,SAACX,EAAUC,GAChB,IAAI8B,EAAS9B,IAAWmE,WAAWrC,OAE/BnB,EAAW,IAAIC,SACnBD,EAASE,OAAO,WAAYH,EAAImD,UAChClD,EAASE,OAAO,aAAcH,EAAI2D,YAClC1D,EAASE,OAAO,SAAUH,EAAI0D,OAAO,IACrCzD,EAASE,OAAO,cAAeH,EAAI6B,aACnC5B,EAASE,OAAO,QAASH,EAAI4B,OAC7B3B,EAASE,OAAO,QAASH,EAAI4D,MAAM,IACnC3D,EAASE,OAAO,QAASH,EAAIuC,OAC7BtC,EAASE,OAAO,QAASH,EAAIoD,OAC7BnD,EAASE,OAAO,OAAQ0D,KAAKC,UAAU9D,EAAI+D,OAC3C9D,EAASE,OAAO,OAAQH,EAAIgE,MAE5BxE,IACGwB,IAAI,eAAiBhB,EAAIiB,IAAKhB,GAC9BP,MAAK,SAAAC,GACJN,EAAS,CAAExC,KAAM+C,IAAyBI,QAC1CX,EAASD,EAAQgC,IACjBZ,YAAsB,4BAEvBI,MAAME,OAIAoD,EAAkB,SAAC9C,GAC9B,8CAAO,WAAO/B,EAAUC,GAAjB,iBAAA+B,EAAA,6DACD8C,EAAS,IAAIlB,EAAO7B,GACpB0B,EAAQqB,EAAOjB,aAFd,SAGC1D,IAAMC,IAAI,sBAAwBqD,GAAOpD,MAAK,SAAAC,GAClDN,EAAS,CACPxC,KAAM+C,IACNC,KAAMF,EAASE,KAAK2D,iBANnB,2CAAP,yDA8BWtC,EAAa,SAAAlB,GACxB,OAAO,SAAAX,GAELG,IACG2B,OAAO,eAAiBnB,EAAIiB,KAC5BvB,MAAK,SAAAC,GACJN,EAAS,CAAExC,KAAM+C,IAAyBI,WAE3CY,MAAME,OAGAsD,EAAkB,SAAAnC,GAC7B,OAAO,SAAA5C,GAELG,IACGwB,IAAI,qBAAsB,CACzBiB,QAEDvC,MAAK,SAAAC,GACJ,IAAMyC,EAAczC,EAASE,KAAKuC,WAC5BF,EAAcvC,EAASE,KAAKqC,YAE/BE,EAAW5D,OAAS,GACrBgC,YAAsB,wBAAD,OAAyB4B,EAAW5D,OAApC,WAEpB0D,EAAY1D,OAAS,GACtB2D,YAAY,GAAD,OAAID,EAAY1D,OAAhB,iBAA+B0D,EAAY1D,OAAS,EAAI,OAAS,MAAjE,oBAGba,EAAS,CAAExC,KAAM+C,IAA0BqC,IAAKG,OAEjDxB,MAAME,Q,yFClDEuD,IApGf,SAAuB1H,GAAO,MAcH2H,mBAAS,IAdN,mBActBC,EAdsB,KAcfC,EAde,OAeWC,YAAY,CAClDC,OAAQ/H,EAAM+H,OACdC,SAAUhI,EAAMgI,WAAY,EAC5BC,OAAQ,SAAAC,GACTL,EACEK,EAAcC,KAAI,SAAA1E,GAClB,OAAO2E,OAAOC,OAAO5E,EAAM,CAC1B6E,OAAQC,IAAIC,gBAAgB/E,YAPxBgF,EAfqB,EAerBA,aAAcC,EAfO,EAePA,cAchBC,EAASf,EAAMO,KAAI,SAAA1E,GAAI,OAC5B,yBAAK3D,UAAU,eAAeoC,IAAKuB,EAAKC,MACtC,yBAAK5D,UAAU,8CAEC,UAAfE,EAAME,MACN,2BAAO0I,UAAQ,EACdC,IAAKpF,EAAK6E,OACVQ,OAAQrF,EAAK6E,OACbS,MAAM,MACNjJ,UAAU,SAJX,2IAYe,UAAfE,EAAME,MACL,yBAAK2I,IAAKpF,EAAK6E,OAAQxI,UAAU,SAASkJ,IAAKvF,EAAKC,KAAOuF,OAAO,QAEpE,uBAAGnJ,UAAU,mBAAmB2D,EAAKC,WAoBxC,OAdAwF,qBACE,kBAAM,WACNtB,EAAMuB,SAAQ,SAAA1F,GAAI,OAAI8E,IAAIa,gBAAgB3F,EAAK6E,cAE/C,CAACV,IAGHsB,qBACC,WACClJ,EAAMqJ,WAAWzB,KAElB,CAACA,IAIA,6BAAS9H,UAAU,0BAA0BwJ,MAAOtJ,EAAMsJ,OAAS,IACpE,uCAAKxJ,UAAU,SAAY2I,EAAa,CAAE3I,UAAW,cACnD,0BAAW4I,KAEZC,EAAO9G,OACL,yBAAK/B,UAAU,wBAAwB6I,GAEvC,6BACD,6BACE,kBAAC,IAAD,CAAa7I,UAAU,4BAA4BG,MAAM,QAAQQ,KAAM,MACtE,uBAAGX,UAAU,iCAEbE,EAAMuJ,YAAcvJ,EAAMuJ,YAAc,6BAS5CZ,EAAO9G,OAAS,GAAK,yBAAK/B,UAAU,eAAc,kBAAC,IAAD,CAAQA,UAAW,eAAeS,QAAS,WAC5FsH,EAAS,MADwC,c,2ICvF/C2B,G,gEAMJ,WAAYxJ,GAAQ,IAAD,8BACjB,cAAMA,IANRyJ,MAAQ,CACNC,YAAa,KACbC,QAAS,MAGQ,EAUnBC,YAAc,SAACC,GACb,IAAMC,EAAeC,IAAYF,GACjC,GAAIC,EAAc,CAChB,IAAME,EAAeC,eAAaC,qBAAqBJ,EAAaK,eAC9DT,EAAcU,cAAYC,kBAAkBL,GAElD,EAAKM,SAAS,CACZZ,YAAaA,EACbC,QAASE,MAlBI,EAuBnBU,oBAAsB,SAAA9G,GACpB,OAAO,IAAI+G,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAM,IAAIC,eAChBD,EAAIE,KAAK,OAAQ,iCACjBF,EAAIG,iBAAiB,gBAAiB,6BACtC,IAAM5H,EAAO,IAAIK,SACjBL,EAAKM,OAAO,QAASC,GACrBkH,EAAII,KAAK7H,GACTyH,EAAIK,iBAAiB,QAAQ,WAC3B,IAAMhI,EAAWkE,KAAK+D,MAAMN,EAAIO,cAChCT,EAAQzH,MAEV2H,EAAIK,iBAAiB,SAAS,WAC5B,IAAMG,EAAQjE,KAAK+D,MAAMN,EAAIO,cAC7BR,EAAOS,UArCM,EA0CnBC,aAAe,SAACC,GACd,EAAKf,SAAS,CACZZ,YAAa2B,IAEf,EAAKrL,MAAMQ,SAAS8K,IAAYC,uBAAaF,EAAmBG,wBA9C/C,E,6EAIcC,GACL,OAAvB1L,KAAK0J,MAAME,SAAuC,KAAnB8B,EAAU5B,MAC1C9J,KAAK6J,YAAY6B,EAAU5B,Q,+BA2CrB,IACAH,EAAgB3J,KAAK0J,MAArBC,YAER,OACE,kBAAC,IAAMgC,SAAP,KACE,kBAAC,SAAD,CACEhC,YAAaA,EACbiC,iBAAiB,eACjBC,gBAAgB,cAChBC,QAAS,CACPC,OAAQ,CAAEC,YAAY,GACtBC,KAAM,CAAED,YAAY,GACpBE,UAAW,CAAEF,YAAY,GACzBG,KAAM,CAAEH,YAAY,GACpBhI,QAAS,CAAEgI,YAAY,GACvB9E,MAAO,CACLkF,eAAgBpM,KAAKwK,oBACrB6B,cAAc,EACdpD,IAAK,CAAEqD,SAAS,EAAMC,WAAW,KAGrCC,oBAAqBxM,KAAKqL,oB,GA5EVxK,IAAMC,YA0FjB2I,O,8ZCpETgD,EAAc,CAClB,CAAEnM,MAAO,EAAGM,MAAO,KACnB,CAAEN,MAAO,EAAGM,MAAO,KACnB,CAAEN,MAAO,EAAGM,MAAO,KACnB,CAAEN,MAAO,EAAGM,MAAO,KACnB,CAAEN,MAAO,EAAGM,MAAO,KACnB,CAAEN,MAAO,GAAIM,MAAO,OAGT8L,EAAb,4MAuBChD,MAAQ,CACPjD,SAAU,GACVQ,WAAY,GACZ0F,eAAgB,GAChBC,eAAgB,GACdvF,KAAM,CACJ,CACEwF,MAAO,EACPC,WAAW,EACXC,KAAM,KAGVrG,OAAO,EACPvB,YAAa,GACbmC,KAAM,EACN0F,WAAW,EAGXC,gBAAiB,GACjBC,mBAAoB,GACpBC,gBAAiB,GACjBC,YAAa,MA5CjB,EA8CEC,SAAW,GA9Cb,EA+DEC,SAAW,WACT,EAAK/C,SAAS,CACZ9D,SAAU,GACVQ,WAAY,GACZ0F,eAAgB,GAChBC,eAAgB,GAChBvF,KAAM,CACJ,CACEwF,MAAO,EACPC,WAAW,EACXC,KAAM,KAGVrG,OAAO,EACPvB,YAAa,GACbmC,KAAM,EACN0F,WAAW,EAGXC,gBAAiB,GACjBC,mBAAoB,GACpBC,gBAAiB,GACjBC,YAAa,QArFnB,EAyFCG,eAAiB,SAACC,GACfA,EAAMC,iBACF,EAAKC,QAAQ,EAAKhE,MAAO,EAAK2D,WAChC,EAAK9C,SAAS,CACZyC,WAAW,IAEK,SAAlB,EAAKK,SACP,EAAKpN,MAAM0N,cAAc,CACxBlH,SAAU,EAAKiD,MAAMjD,SACrBvB,MAAO,EAAKwE,MAAMuD,gBAClBhG,WAAY,EAAKyC,MAAMzC,WACvBC,MAAO,EAAKwC,MAAMiD,eAClB3F,OAAQ,EAAK0C,MAAMkD,eACnBvF,KAAM,EAAKqC,MAAMrC,KACjBlC,YAAa,EAAKuE,MAAMvE,YACnBU,MAAO,EAAK6D,MAAMyD,gBAClBzG,MAAO,EAAKgD,MAAMhD,MAClBY,KAAM,EAAKoC,MAAMpC,OAGvB,EAAKrH,MAAMoE,WAAW,CACrBE,IAAK,EAAKmF,MAAMkE,GAChBnH,SAAU,EAAKiD,MAAMjD,SACrBvB,MAAO,EAAKwE,MAAMuD,gBAClBhG,WAAY,EAAKyC,MAAMzC,WACvBC,MAAO,EAAKwC,MAAMiD,eAClB3F,OAAQ,EAAK0C,MAAMkD,eACnBvF,KAAM,EAAKqC,MAAMrC,KACjBlC,YAAa,EAAKuE,MAAMvE,YACnBU,MAAO,EAAK6D,MAAMyD,gBAClBzG,MAAO,EAAKgD,MAAMhD,MAClBY,KAAM,EAAKoC,MAAMpC,QAIrB,EAAKiD,SAAS,CACZyC,WAAW,KA7HnB,EAkIEU,QAAU,SAAChE,EAAOvJ,GAClB,OACQuJ,EAAMjD,UAAYiD,EAAMwD,oBAAsBxD,EAAMyD,iBAAmBzD,EAAMuD,iBApIvF,EA0ICY,YAAc,SAAC1N,EAAM0H,GACR,UAAT1H,EACF,EAAKoK,SAAS,CACboC,eAAgB9E,IAEC,UAAT1H,GACT,EAAKoK,SAAS,CACbqC,eAAgB/E,KAjJpB,EAsJCiG,aAAe,SAACC,GACT1F,OAAO2F,GAAG,EAAKtE,MAAMvE,YAAa4I,IACpC,EAAKxD,SAAS,CACZpF,YAAa4I,KAzJrB,EA8JCE,aAAe,SAACtK,EAAMxD,GACrB,EAAKoK,SAAL,eACE5G,EAAOxD,KAhKX,EAoKE+N,UAAY,WACV,IAAI7G,EAAO,EAAKqC,MAAMrC,KAChB8G,EAAS,CACbtB,MAAOxF,EAAKvF,OACZgL,WAAW,EACXC,KAAM,IAER1F,EAAKpD,KAAKkK,GACV,EAAK5D,SAAS,CACZlD,KAAMA,EAAK+G,WA7KjB,EAiLEC,4BAA8B,SAACxB,EAAOvM,GAChB,qBAAVuM,GACRyB,MAAM,0BAER,IAAIC,EAAO,EAAK7E,MAAMrC,KACtBkH,EAAK1B,GAAOE,KAAOzM,EAEnB,EAAKiK,SAAS,CACZlD,KAAMkH,KAzLZ,EA6LEC,uBAAyB,SAAC3B,GACxB,IAAI4B,EAAU,EAAK/E,MAAMrC,KAAKI,QAAO,SAACiH,EAAKC,GAAN,OACnC9B,IAAW8B,KAGb,EAAKpE,SAAS,CACZlD,KAAMoH,KAnMZ,EAuMEG,sBAAwB,SAAC/B,GACvB,IAAI0B,EAAO,EAAK7E,MAAMrC,KACtBkH,EAAK1B,GAAOC,WAAayB,EAAK1B,GAAOC,UAErC,EAAKvC,SAAS,CACZlD,KAAMkH,KA5MZ,EAgNCM,eAAiB,SAACC,GACjB,IADgC,EAC5BC,EAAS,GADmB,cAETD,GAFS,IAEhC,2BAAmC,CAAC,IAAzBjI,EAAwB,QAOlC,GANAkI,EAAO9K,KAAK,CACX3D,MAAOuG,EAAStC,IAChB3D,MAAOiG,EAASlD,KAChBqL,WAAYnI,EAASoI,UAAYpI,EAASoI,SAASnN,OAAS,IAG1D+E,EAASoI,SAAU,CAAC,IAAD,gBACDpI,EAASoI,UADR,IACrB,2BAAuC,CAAC,IAA7BC,EAA4B,QACtCH,EAAO9K,KAAK,CACX3D,MAAO4O,EAAM3K,IACb3D,MAAO,0BAAM2I,MAAO,CAAC4F,YAAa,OAAQpP,UAAU,QAAQmP,EAAMvL,SAJ/C,iCATS,8BAkBhC,OAAOoL,GAlOT,kEAiDI/O,KAAKC,MAAMmP,YACXpP,KAAKC,MAAMoP,gBACXrP,KAAKC,MAAMqP,UAAU,cACrBtP,KAAKqN,SAAWnL,YAAoB,QACtC,IAAI0L,EAAK1L,YAAoB,MAGjB,KAAP0L,EACD5N,KAAKC,MAAMuH,gBAAgB,CAACjD,IAAKqJ,IAEjC5N,KAAKsN,aA3DX,+BAqOW,IAAD,SAYFtN,KAAK0J,MAVPrC,EAFI,EAEJA,KACAX,EAHI,EAGJA,MACAY,EAJI,EAIJA,KACAnC,EALI,EAKJA,YACA8H,EANI,EAMJA,gBACHC,EAPO,EAOPA,mBACGC,EARI,EAQJA,gBACA1G,EATI,EASJA,SACAQ,EAVI,EAUJA,WACAmG,EAXI,EAWJA,YAXI,EAeFpN,KAAKC,MADP0F,EAdI,EAcJA,OAAQX,EAdJ,EAcIA,OAAQ8J,EAdZ,EAcYA,WAGC,IAAhBzH,EAAKvF,QACT9B,KAAKkO,YAGJ,IAAIqB,EAAiB5J,EAAO8B,QAAO,SAAC5B,GACrC,OAAOA,EAAM2J,QAAQjL,MAAQ0I,GAAmBpH,EAAM4J,WAAWlL,MAAQ2I,KACvE9E,KAAI,SAACsH,GAAD,MAAU,CAACpP,MAAOoP,EAAInL,IAAK3D,MAAO8O,EAAI/L,SAErCgM,EAAe3K,EAAOoD,KAAI,SAAClD,GAAD,MAAY,CAC1C5E,MAAO4E,EAAMX,IACb3D,MAAOsE,EAAMvB,SAGTiM,EAAkB5P,KAAK6O,eAAeC,GAE9C,OACI,kBAAC,IAAMnD,SAAP,KACE,kBAAC,IAAD,CACE3K,gBAAgB,aAChBI,iBAAiB,OACjBI,iBAAgB,UAAuB,SAAlBxB,KAAKqN,SAAsB,kBAAqB,oBAEvE,yBAAKtN,UAAU,aACb,kBAAC,IAAO8P,OAAR,CAAeC,SAAO,EAAC5P,MAAM,OAAQM,QAAS,WAAO,EAAKP,MAAM+D,QAAQC,KAAnB,UAA2B9C,YAA3B,kBACnD,kBAAC,IAAD,CAAmBT,KAAM,KAD3B,kBAKF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMX,UAAU,YAAYgQ,SAAU/P,KAAKuN,gBACzC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKyC,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAI3G,MAAO,CAAC4G,OAAQ,OACzC,yBAAKpQ,UAAU,UACb,kBAAC,IAAD,KACE,wBAAIA,UAAU,kCAAd,QACA,kBAAC,IAAD,CACEA,UAAU,QACVqQ,gBAAgB,SAChBzM,KAAK,OACL0M,QAAS5D,EACTnM,MAAOmM,EAAY6D,MAAK,SAACZ,GAAD,OAASA,EAAIpP,QAAUgH,KAC/C7G,SAAU,SAAA8P,GAAC,OAAI,EAAKhG,SAAS,CAACjD,KAAMiJ,EAAEjQ,cAK9C,kBAAC,IAAD,CAAK0P,GAAG,KAAKC,GAAG,KAAKC,GAAG,MACtB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKF,GAAG,IAAIQ,GAAG,KAAKjH,MAAO,CAAC4G,OAAQ,MAClC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOM,IAAI,SAAX,gBACA,kBAAC,IAAD,CACE1Q,UAAU,QACVqQ,gBAAgB,SAChBzM,KAAK,QACLiK,GAAG,QACHtN,MAAOqP,EAAaW,MAAK,SAACZ,GAAD,OAASA,EAAIpP,QAAU2M,KAChDoD,QAASV,EACTlP,SAAU,SAAC8P,GAAD,OAAO,EAAKhG,SAAS,CAC7B0C,gBAAiBsD,EAAEjQ,MACnB6M,gBAAiB,SAIlBF,GAAmB,uBAAGlN,UAAU,eAAb,0BAI1B,kBAAC,IAAD,CAAKiQ,GAAG,IAAIQ,GAAG,KAAKjH,MAAO,CAAC4G,OAAQ,MAClC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOM,IAAI,YAAX,mBAEE1K,QAAQC,IAAI4J,EAAgBU,MAAK,SAACZ,GAAD,OAASA,EAAIpP,QAAU4M,MAGxDnH,QAAQC,IAAI,qBAAsBkH,GAEpC,kBAAC,IAAD,CACEnN,UAAU,QACVqQ,gBAAgB,SAChBzM,KAAK,WACLiK,GAAG,WACHyC,QAAST,EACTtP,MAAOsP,EAAgBU,MAAK,SAACZ,GAAD,OAASA,EAAIpP,QAAU4M,KACnDzM,SAAU,SAAC8P,GAAD,OAAO,EAAKhG,SAAS,CAC7B2C,mBAAoBqD,EAAEjQ,MACtB6M,gBAAiB,SAIlBD,GAAsB,uBAAGnN,UAAU,eAAb,0BAI7B,kBAAC,IAAD,CAAKiQ,GAAG,IAAIQ,GAAG,KAAKjH,MAAO,CAAC4G,OAAQ,MAClC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOM,IAAI,SAAX,gBACA,kBAAC,IAAD,CACE1Q,UAAU,QACVqQ,gBAAgB,SAChBzM,KAAK,QACLiK,GAAG,QACHyC,QAASd,EACTjP,MAAOiP,EAAee,MAAK,SAACZ,GAAD,OAASA,EAAIpP,QAAU6M,KAClD1M,SAAU,SAAC8P,GAAD,OAAO,EAAKhG,SAAS,CAC7B4C,gBAAiBoD,EAAEjQ,YAIpB6M,GAAmB,uBAAGpN,UAAU,eAAb,0BAI1B,kBAAC,IAAD,CAAKiQ,GAAG,IAAIQ,GAAG,IAAIzQ,UAAU,QAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMmB,GAAE,UAAKC,YAAL,YACN,kBAAC,IAAD,CAAoBT,KAAM,QAIhC,kBAAC,IAAD,CAAK8P,GAAG,MACN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,IAAI,YAAX,YACA,kBAAC,IAAD,CACEtQ,KAAK,OACLwD,KAAK,WACLiK,GAAG,WACHpE,YAAY,iBACZlJ,MAAOmG,EACPhG,SAAU,SAAC8P,GAAD,OAAO,EAAKhG,SAAS,CAC7B9D,SAAU8J,EAAEG,OAAOpQ,SAErBqQ,QAAsB,KAAblK,IAGI,KAAbA,GAAmB,0BAAM1G,UAAU,mBAAhB,uBAIzB,kBAAC,IAAD,CAAKiQ,GAAG,MACJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOS,IAAI,cAAc1Q,UAAU,QAAnC,eACA,kBAAC,IAAD,CAAQ6N,GAAG,cAAc9D,KAAM3E,EAAa1E,SAAU,SAACmQ,GAAD,OAAY,EAAK9C,aAAa8C,QAI1F,kBAAC,IAAD,CAAKZ,GAAG,MACN,kBAAC,IAAD,CAAKjQ,UAAU,QACb,kBAAC,IAAD,CAAKiQ,GAAG,KAEJ5C,GAAeA,EAAYyD,OAC3B,kBAAC,IAAD,CAAK9Q,UAAU,OACb,kBAAC,IAAD,CAAKiQ,GAAG,MACN,yBAAKjQ,UAAU,QAAQ+I,IAAKsE,EAAYyD,OAAQ5H,IAAI,MAEtD,kBAAC,IAAD,CAAK+G,GAAG,KAAKjQ,UAAU,mBACrB,kBAAC,IAAO8P,OAAR,CACE3P,MAAM,SACNH,UAAU,OACVS,QAAS,WACP,IAAIsQ,EAAO1D,EACX0D,EAAKD,OAAS,GACd,EAAKtG,SAAS,CACZ6C,YAAa0D,MAPnB,YAgBN,oCACE,kBAAC,IAAD,CACE9I,OAAO,UACP7H,KAAK,QACLqJ,YAAY,aACZvB,UAAU,EACVqB,WAAY,SAACzB,GAAD,OAAW,EAAKgG,YAAY,QAAShG,IACjD0B,MAAO,CAACwH,WAAY,sEAK1B,kBAAC,IAAD,CAAKf,GAAG,KAEJ5C,GAAeA,EAAYpG,QAAWoG,EAAYpG,OAAOlF,OAAS,GAA+B,KAA1BsL,EAAYpG,OAAO,GAC1F,kBAAC,IAAD,CAAKjH,UAAU,OACb,kBAAC,IAAD,CAAKiQ,GAAG,MACN,2BAAOnH,UAAQ,EACbC,IAAKsE,EAAYpG,OAAO,GACxBgC,MAAM,MACNjJ,UAAU,SAHZ,4IAUF,kBAAC,IAAD,CAAKiQ,GAAG,KAAKjQ,UAAU,cACnB,kBAAC,IAAO8P,OAAR,CACE3P,MAAM,SACNH,UAAU,OACVS,QAAS,WACP,IAAIsQ,EAAO1D,EACX0D,EAAK9J,OAAS,GACd,EAAKuD,SAAS,CACZ6C,YAAa0D,MAPnB,YAgBN,kBAAC,IAAD,CACE9I,OAAO,wBACP7H,KAAK,QACLqJ,YAAY,cACZF,WAAY,SAACzB,GAAD,OAAW,EAAKgG,YAAY,QAAShG,IACjD0B,MAAO,CAACwH,WAAY,uEAO9B,kBAAC,IAAD,CAAKP,GAAG,MACN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,IAAI,eAAX,eACA,kBAAC,IAAD,CACEtQ,KAAK,OACLwD,KAAK,aACLiK,GAAG,cACHpE,YAAY,cACZlJ,MAAO2G,EACPxG,SAAU,SAAC8P,GAAD,OAAO,EAAKhG,SAAS,CAC7BtD,WAAYsJ,EAAEG,OAAOpQ,SAEvBqQ,SAAW,sDAAsDK,KAAK/J,IAA8B,KAAfA,GAAsB,uBAAGlH,UAAU,eAAb,oCAMnH,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKA,UAAU,uBACb,kBAAC,IAAD,CACEG,MAAM,UACNS,KAAM,kBAAC,IAAD,CAAOZ,UAAU,UAAUW,KAAM,KACvCE,MAAM,MACNP,QAASqG,EACTpG,MAAON,KAAK0J,MAAMhD,MAClBjG,SAAU,WACLiG,EACD,EAAK6D,SAAS,CAAC7D,OAAQA,IAEvB,EAAK6D,SAAS,CACZ7D,OAAQA,EACRW,KAAM,CACJ,CACEwF,MAAO,EACPC,WAAW,EACXC,KAAM,UAQdhH,QAAQC,IAAI,mBAAoBhG,KAAK0J,MAAMhD,UAwBnDA,GAAS,kBAAC,IAAD,MAEHW,EAAKiJ,MAAK,SAACZ,GAAD,OAA2B,IAAlBA,EAAI5C,cAAuB,uBAAG/M,UAAU,eAAb,gCAEhD,6BAEEgG,QAAQC,IAAI,eAAgBqB,IAGhC,kBAAC,IAAD,CAAK2I,GAAG,MACN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE1P,MAAO+G,EAAK,GAAG0F,KACftM,SAAU,SAAC8P,GAAD,OAAO,EAAKlC,4BAA4B,EAAGkC,EAAEG,OAAOpQ,UAEhE,kBAAC,IAAD,CAAiB2Q,UAAU,UAEvB,kBAAC,IAAD,CACE/Q,MAAM,UACNS,KAAM,kBAAC,IAAD,CAAOZ,UAAU,UAAUW,KAAM,KACvCE,MAAM,iBACNP,QAASgH,EAAK,GAAGyF,UACjBxM,MAAO+G,EAAK,GAAGyF,UACfrM,SAAU,kBAAM,EAAKmO,sBAAsB,IAC3C7O,UAAU,oBAGd,kBAAC,IAAO8P,OAAR,CAAe3P,MAAM,UACnBM,QAASR,KAAKkO,WAEd,kBAAC,IAAD,CAAoBxN,KAAM,SAMhC2G,EAAKvF,OAAU,GAAKuF,EAAKe,KAAI,SAAC8I,EAAKrE,GACjC,OAAa,IAAVA,EAAsB,KAEvB,kBAAC,IAAD,CAAW1K,IAAK0K,GACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOvM,MAAO4Q,EAAInE,KAAMtM,SAAU,SAAC8P,GAAD,OAAO,EAAKlC,4BAA4BxB,EAAO0D,EAAEG,OAAOpQ,UAC1F,kBAAC,IAAD,CAAiB2Q,UAAU,UACzB,kBAAC,IAAD,CACE/Q,MAAM,UACNS,KAAM,kBAAC,IAAD,CAAOZ,UAAU,UAAUW,KAAM,KACvCE,MAAM,iBACNN,MAAQ4Q,EAAIpE,UACZzM,QAAS6Q,EAAIpE,UACbrM,SAAU,kBAAM,EAAKmO,sBAAsB/B,IAC3C9M,UAAU,oBAEZ,kBAAC,IAAO8P,OAAR,CAAe3P,MAAM,SACnBM,QAAS,kBAAM,EAAKgO,uBAAuB3B,KAE3C,kBAAC,IAAD,CAAgBnM,KAAM,cAgB1C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK8P,GAAG,MACN,kBAAC,IAAD,CAAWzQ,UAAU,cAEjBC,KAAK0J,MAAMsD,WAAa,uBAAGjN,UAAU,eAAb,6BAE1B,kBAAC,IAAO8P,OAAR,CACE3P,MAAM,UACNC,KAAK,SACLJ,UAAU,aAHZ,sBA9mBxB,gDAEkCE,EAAOyJ,GACrC,GAAGzJ,EAAMkR,aAAa,KAAM9I,OAAO2F,GAAG/N,EAAMkR,aAAa,GAAIzH,EAAM0D,aAAc,CAC/E,IAAIA,EAAcnN,EAAMkR,aAAa,GAErC,MAAO,CACLvD,GAAIR,EAAY7I,IAChB6I,YAAaA,EACjB3G,SAAU2G,EAAY3G,SACtBQ,WAAYmG,EAAYnG,WACpBI,KAAM+F,EAAY/F,KACtBlC,YAAaiI,EAAYjI,YACzB+H,mBAAoBE,EAAYvH,MAAM4J,WAAWlL,IACjD4I,gBAAiBC,EAAYvH,MAAMtB,IAC/B0I,gBAAiBG,EAAYlI,MAAMX,IACnCmC,MAAO0G,EAAY1G,MACnBY,KAAM8F,EAAY9F,MAGtB,OAAO,SApBX,GAAoCxG,aAopB9BsQ,EAAqB,CAC1BhC,cACAC,kBACAC,cACCjL,eACAsJ,kBACAnG,qBAGa6J,uBAnBS,SAAC3H,GACxB,MAAO,CACN1E,OAAQ0E,EAAMxE,MAAMoM,QACpBxC,WAAYpF,EAAM7C,SAAS0K,WACzB5L,OAAQ+D,EAAM7D,MAAM2L,YACpBC,eAAgB/H,EAAM3C,WAAWuK,QACjCH,aAAczH,EAAM3C,WAAW2K,aAaKN,EAAzBC,CAA6C3E","file":"static/js/22.4eca1170.chunk.js","sourcesContent":["import React from \"react\"\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : \"\"\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : \"md\"\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n","import React from \"react\"\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  // UncontrolledButtonDropdown,\r\n  // DropdownMenu,\r\n  // DropdownItem,\r\n  // DropdownToggle\r\n} from \"reactstrap\"\r\nimport { Home } from \"react-feather\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { subRooter } from \"../../../configs/vars\"\r\n\r\n\r\nclass BreadCrumbs extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"content-header row\">\r\n        <div className=\"content-header-left col-md-9 col-12 mb-2\">\r\n          <div className=\"row breadcrumbs-top\">\r\n            <div className=\"col-12\">\r\n              {this.props.breadCrumbTitle ? (\r\n                <h2 className=\"content-header-title float-left mb-0\">\r\n                  {this.props.breadCrumbTitle}\r\n                </h2>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <div className=\"breadcrumb-wrapper vx-breadcrumbs d-sm-block d-none col-12\">\r\n                <Breadcrumb tag=\"ol\">\r\n                  <BreadcrumbItem tag=\"li\">\r\n                    <NavLink to={subRooter}>\r\n                      <Home className=\"align-top\" size={15} />\r\n                    </NavLink>\r\n                    {/* <a href=\"/\" target=\"_blank\">\r\n                      <Home className=\"align-top\" size={15} />\r\n                    </a> */}\r\n                  </BreadcrumbItem>\r\n                  <BreadcrumbItem tag=\"li\" className=\"text-primary\">\r\n                    {this.props.breadCrumbParent}\r\n                  </BreadcrumbItem>\r\n                  {this.props.breadCrumbParent2 ? (\r\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\r\n                      {this.props.breadCrumbParent2}\r\n                    </BreadcrumbItem>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {this.props.breadCrumbParent3 ? (\r\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\r\n                      {this.props.breadCrumbParent3}\r\n                    </BreadcrumbItem>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  <BreadcrumbItem tag=\"li\" active>\r\n                    {this.props.breadCrumbActive}\r\n                  </BreadcrumbItem>\r\n                </Breadcrumb>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"content-header-right text-md-right col-md-3 col-12 d-md-block d-none\">\r\n          <div className=\"form-group breadcrum-right dropdown\">\r\n            <UncontrolledButtonDropdown>\r\n              <DropdownToggle\r\n                color=\"primary\"\r\n                size=\"sm\"\r\n                className=\"btn-icon btn-round dropdown-toggle\"\r\n              >\r\n                <Settings\r\n                  size={14}\r\n                  style={{\r\n                    left: 0\r\n                  }}\r\n                />\r\n              </DropdownToggle>\r\n              <DropdownMenu tag=\"ul\" right>\r\n                <DropdownItem tag=\"li\">\r\n                  <NavLink className=\"text-dark w-100\" to=\"/chat\">\r\n                    Chat\r\n                  </NavLink>\r\n                </DropdownItem>\r\n                <DropdownItem tag=\"li\">\r\n                  <NavLink className=\"text-dark w-100\" to=\"/email/inbox\">\r\n                    Email\r\n                  </NavLink>\r\n                </DropdownItem>\r\n                <DropdownItem tag=\"li\">\r\n                  <NavLink className=\"text-dark w-100\" to=\"/calendar\">\r\n                    Calendar\r\n                  </NavLink>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledButtonDropdown>\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default BreadCrumbs\r\n","\r\nexport const matchYMD = (date) => {\r\n  let sub = date.substr(date.indexOf('.'), date.length);\r\n  date = date.split(sub).join(\" \");\r\n  return date.replace(/t/gi, ' ')\r\n}\r\n\r\nexport const getQueryStringValue =  function (key) {  \r\n  return decodeURIComponent(window.location.search.replace(new RegExp(\"^(?:.*[&\\\\?]\" + encodeURIComponent(key).replace(/[\\.\\+\\*]/g, \"\\\\$&\") + \"(?:\\\\=([^&]*))?)?.*$\", \"i\"), \"$1\"));  \r\n}","import { history } from \"../../../history\";\r\nimport { subRooter } from \"../../../configs/vars\";\r\nimport * as Types from \"../types\";\r\nimport { Axios } from \"../root\"\r\nimport { displayServerErrorMessage, displaySuccessMessage } from '../../../service/Alert';\r\n\r\nexport const getData = () => {\r\n  return (dispatch, getState) => {\r\n    return dispatch()\r\n  }\r\n}\r\n\r\nexport const getParentData = () => {\r\n  return dispatch => {\r\n    Axios.get('/category/parents')\r\n      .then(response => {\r\n        dispatch({ type: Types.FETCH_ALL_CATEGORY_PARENT, data: response.data.parents })\r\n      })\r\n  }\r\n}\r\n\r\nexport const addData = (obj) => {\r\n  return (dispatch, getState) => {\r\n    const formData = new FormData();\r\n    formData.append('image', obj.file);\r\n    formData.append('name', obj.name)\r\n    formData.append('parentId', obj.parentId)\r\n\r\n    Axios\r\n      .post(\"/category/create\", formData)\r\n      .then(response => {\r\n        displaySuccessMessage(\"Successfully Created\")\r\n        dispatch({ type: Types.ADD_CATEGORY, data: response.data.doc})\r\n        history.push(`${subRooter}/categories`);\r\n        dispatch(getParentData())\r\n      })\r\n      .catch((err) => {\r\n        displayServerErrorMessage(err);\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateData = (obj) => {\r\n  return (dispatch, getState) => {\r\n    const formData = new FormData();\r\n    formData.append('image', obj.file);\r\n    formData.append('name', obj.name)\r\n    formData.append('parentId', obj.parentId)\r\n\r\n    Axios\r\n      .put(\"/category/\" + obj._id, formData)\r\n      .then(response => {\r\n        displaySuccessMessage(\"Successfully Updated\")\r\n        dispatch({ type: Types.UPDATE_CATEGORY })\r\n        dispatch(getParentData())\r\n      })\r\n      .catch((err) => {\r\n        displayServerErrorMessage(err);\r\n      })\r\n  }\r\n}\r\n\r\nexport const deleteData = (obj) => {\r\n  return dispatch => {\r\n    Axios\r\n      .delete(\"/category/\" + obj._id)\r\n      .then(response => {\r\n        displaySuccessMessage(\"Successfully Deleted\")\r\n        dispatch({ type: Types.DELETE_CATEGORY, data: obj})\r\n        dispatch(getParentData())\r\n      })\r\n      .catch((err) => {\r\n        displayServerErrorMessage(err);\r\n      })\r\n  }\r\n}","import * as Types from \"../types\";\r\nimport { Axios } from \"../root\"\r\nimport { displayServerErrorMessage, displayInfo, displaySuccessMessage } from '../../../service/Alert';\r\n\r\n\r\nexport const getData = (params) => {\r\n  return async dispatch => {\r\n    var url = \"\";\r\n    if(params && params.page) {\r\n      if(isNaN(params.page)) {\r\n        params.page = 1\r\n      }\r\n      if(isNaN(params.perPage)) {\r\n        params.perPage = 4\r\n      }\r\n      url = `/levels?page=${params.page}&perPage=${params.perPage}`;\r\n    } else {\r\n      url = `/levels?page=1&perPage=4`;\r\n    }\r\n    await Axios.get(url)\r\n      .then(response => {\r\n        dispatch({\r\n          type: Types.FETCH_LEVELS,\r\n          data: response.data.levels,\r\n          totalPages: response.data.totalPages,\r\n          params\r\n        })\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n\r\nexport const addData = (obj) => {\r\n  return (dispatch, getState) => {\r\n    let params = getState().level.params;\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', obj.file);\r\n    formData.append('name', obj.name)\r\n    formData.append('description', obj.description)\r\n\r\n    Axios\r\n      .post(\"/level/create\", formData)\r\n      .then(response => {\r\n        dispatch({ type: Types.ADD_LEVEL, obj: response.data.doc })\r\n        dispatch(getData(params))\r\n        displaySuccessMessage(\"Successfully Submitted\")\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n\r\nexport const getInitialData = () => {\r\n  return async dispatch => {\r\n    await Axios.get(\"/levels\").then(response => {\r\n      dispatch({ type: Types.FETCH_ALL_LEVEL, data: response.data.levels })\r\n    })\r\n  }\r\n}\r\n\r\nexport const filterData = value => {\r\n  return dispatch => dispatch({ type: Types.FILTER_LEVEL , value })\r\n}\r\n\r\nexport const deleteData = obj => {\r\n  return dispatch => {\r\n    \r\n    Axios\r\n      .delete(\"/level/\" + obj._id)\r\n      .then(response => {\r\n        dispatch({ type: Types.DELETE_LEVEL, obj });\r\n        displaySuccessMessage(\"Successfully  deleted!\");\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\nexport const deleteDatas = ids => {\r\n  return dispatch => {\r\n    \r\n    Axios\r\n      .put(\"/levels-delete\", {ids: ids})\r\n      .then(response => {\r\n        if(response.data.relatedData && response.data.relatedData.length > 0) {\r\n          displayInfo(`${response.data.relatedData.length} data has relevant data.`);\r\n        }\r\n        if(response.data.deletedIds.length > 0) {\r\n          displaySuccessMessage(\"Successfully deleted\");\r\n        } \r\n        dispatch({ type: Types.DELETE_LEVELS, ids: response.data.deletedIds });\r\n\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n\r\nexport const updateData = obj => {\r\n  return (dispatch, getState) => {\r\n    const formData = new FormData();\r\n\r\n    formData.append('image', obj.file);\r\n    formData.append('name', obj.name)\r\n    formData.append('description', obj.description);\r\n    let params = getState().level.params;\r\n    Axios\r\n      .put(\"/level/\" + obj._id, formData)\r\n      .then(response => {\r\n        dispatch({ type: Types.UPDATE_LEVEL, obj })\r\n        dispatch(getData(params))\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}","import * as Types from \"../types\";\r\nimport { Axios } from \"../root\"\r\nimport { displayServerErrorMessage, displaySuccessMessage, displayInfo } from '../../../service/Alert';\r\n\r\n\r\nexport const getData = (params) => {\r\n  return async (dispatch, getState) => {\r\n    // let userRole = getState().auth.userRole;\r\n    await Axios.get(`/management/topics?page=${params.page}&perPage=${params.perPage}`).then(response => {\r\n      dispatch({\r\n        type: Types.FETCH_TOPICS,\r\n        data: response.data.topics,\r\n        totalPages: response.data.totalPages,\r\n        params\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const getMangementInitialData = () => {\r\n  return async (dispatch, getState) => {\r\n    await Axios.get(`/management/topics`).then(response => {\r\n      dispatch({ type: Types.FETCH_ALL_TOPIC, data: response.data.topics })\r\n    })\r\n  }\r\n}\r\nexport const getInitialData = () => {\r\n  return async (dispatch, getState) => {\r\n    await Axios.get(`/management/topics`).then(response => {\r\n      dispatch({ type: Types.FETCH_ALL_TOPIC, data: response.data.topics })\r\n    })\r\n  }\r\n}\r\n\r\nexport const addData = (obj) => {\r\n  return (dispatch, getState) => {\r\n    let params = getState().topic.params;\r\n    Axios\r\n      .post(\"/topic/create\", obj)\r\n      .then(response => {\r\n        displaySuccessMessage(\"Successfully Submitted!\")\r\n        dispatch(getData(params))\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n\r\nexport const filterData = value => {\r\n  return dispatch => dispatch({ type: Types.FILTER_TOPIC , value })\r\n}\r\n\r\nexport const deleteData = obj => {\r\n  return dispatch => {\r\n    \r\n    Axios\r\n      .delete(\"/topic/\" + obj._id)\r\n      .then(response => {\r\n        displaySuccessMessage(`${obj.name} topic have been deleted!`)\r\n        dispatch({ type: Types.DELETE_TOPIC, obj })\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n\r\nexport const deleteDatas = ids => {\r\n  return (dispatch, getState) => {\r\n    let params = getState().topic.params;\r\n    Axios\r\n      .put(\"/delete-topics\", {ids: ids})\r\n      .then(response => {\r\n        if(response.data.deletedIds.length > 0) {\r\n          displaySuccessMessage(`${response.data.deletedIds.length} topic have been deleted!`)\r\n        }\r\n        if(response.data.usedIds.length > 0) {\r\n          displayInfo(`${response.data.usedIds.length} topics have relevant Lesson or Assessment!`)\r\n        }\r\n        if(response.data.deletedIds.length > 0) {\r\n          dispatch(getData(params))\r\n          dispatch({ type: Types.DELETE_TOPICS, ids: response.data.deletedIds })\r\n        }\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n\r\nexport const updateData = obj => {\r\n  return (dispatch, getState) => {\r\n    \r\n    let params = getState().topic.params;\r\n\r\n    console.log(\"obj\", obj);    \r\n    Axios\r\n      .put(\"/topic/\" + obj._id, obj)\r\n      .then(response => {\r\n        dispatch({ type: Types.UPDATE_TOPIC, obj })\r\n        dispatch(getData(params))\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n\r\nexport const getDataByType = (type) => {\r\n  // type | LESSON | ASSESSMENT\r\n  return async (dispatch) => {\r\n    await Axios.get(`/topics?type=${type}`).then(response => {\r\n      dispatch({\r\n        type: Types.FETCH_TOPICS_BY_TYPE,\r\n        data: response.data.topics,\r\n      })\r\n    })\r\n  }\r\n}","class QueryBuilder {\r\n  siteUrl = ''\r\n  query = '?'\r\n  constructor(siteUrl) {\r\n    if(siteUrl !== '') {\r\n      this.siteUrl = siteUrl\r\n    } else {\r\n      this.siteUrl = ''\r\n    }\r\n  }\r\n\r\n  set = (field, value) => {\r\n    if(this.query.indexOf('=') > -1) {\r\n      this.query += '&'\r\n    }\r\n    this.query += `${field}=${value}`\r\n  }\r\n\r\n  get = () => {\r\n    return this.siteUrl + this.query; \r\n  }\r\n}\r\n\r\nexport default QueryBuilder","import QueryBuilder from '../classess/QueryBuilder'\r\n\r\nclass Filter {\r\n  _id // id \r\n  topic // id of topic\r\n  level // id of level\r\n  question // string of question\r\n  category // string of category\r\n  isMCQ // boolean\r\n  createdBy // id of user\r\n  deleted // boolean\r\n\r\n  constructor(params) {\r\n    this._id = params._id\r\n    this.topic = params.topic\r\n    this.level = params.level\r\n    this.question = params.question\r\n    this.isMCQ = params.isMCQ\r\n    this.createdBy = params.createdBy\r\n    this.deleted = params.deleted;\r\n    this.category = params.category;\r\n  }\r\n\r\n  buildQuery = () => {\r\n    let query = new QueryBuilder('')\r\n    if(this._id) {\r\n      query.set('_id', this._id);\r\n    }\r\n    if(this.topic) {\r\n      query.set('topic', this.topic);\r\n    }\r\n    if(this.level) {\r\n      query.set('level', this.level);\r\n    }\r\n    if(this.question) {\r\n      query.set('question', this.question);\r\n    }\r\n    if(this.isMCQ) {\r\n      query.set('isMCQ', this.isMCQ);\r\n    }\r\n    if(this.createdBy) {\r\n      query.set('createdBy', this.createdBy);\r\n    }\r\n    if(this.deleted) {\r\n      query.set('deleted', this.deleted);\r\n    }\r\n    if(this.category) {\r\n      query.set('category', this.category);\r\n    }\r\n\r\n    var queryStr = query.get();\r\n    return queryStr;\r\n  }\r\n}\r\n\r\nexport default Filter;","import { history } from \"../../../history\";\r\nimport * as Types from \"../types\";\r\nimport { Axios } from \"../root\"\r\nimport { displaySuccessMessage, displayServerErrorMessage, displayInfo } from '../../../service/Alert';\r\nimport { subRooter  } from \"../../../configs/vars\";\r\nimport Filter from \"./filterClass\";\r\n\r\nexport const getData = (params) => {\r\n  if(params === null) {\r\n    params = {}\r\n    params.page     = 1\r\n    params.perPage  = 4\r\n  }\r\n  return async (dispatch, getState) => {\r\n    await Axios.get(`/assessments?page=${params.page}&perPage=${params.perPage}`).then(response => {\r\n      dispatch({\r\n        type: Types.FETCH_ASSESSMENTS,\r\n        data: response.data.assessments,\r\n        totalPages: response.data.totalPages,\r\n        params\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const addData = (obj) => {\r\n  return (dispatch, getState) => {\r\n    let params = getState().assessment.params;\r\n    let videos = obj.videos;\r\n\r\n    let formData = new FormData();\r\n    formData.append('question', obj.question);\r\n    formData.append('level', obj.level);\r\n    formData.append('youtubeUrl', obj.youtubeUrl);\r\n    formData.append('videos', videos[0]);\r\n    formData.append('description', obj.description);\r\n    formData.append('image', obj.image[0]);\r\n    formData.append('topic', obj.topic);\r\n    formData.append('isMCQ', obj.isMCQ);\r\n    formData.append('MCQs', JSON.stringify(obj.MCQs));\r\n    formData.append('mark', obj.mark);\r\n\r\n    Axios\r\n      .post(\"/assessment/create\", formData)\r\n      .then(response => {\r\n        dispatch({ type: Types.ADD_ASSESSMENT, obj: response.data.doc })\r\n        dispatch(getData(params));\r\n        displaySuccessMessage('Successfully uploaded new question!')\r\n        history.push(`${subRooter}/assessment`)\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n\r\nexport const getInitialData = () => {\r\n  return async (dispatch, getState) => {\r\n    await Axios.get(`/assessments`).then(response => {\r\n      dispatch({ type: Types.FETCH_ALL_ASSESSMENTS, data: response.data.assessments })\r\n    })\r\n  }\r\n}\r\n\r\nexport const filterData = (value, filterOption) => {\r\n  return dispatch => dispatch({ type: Types.FILTER_ASSESSMENT , value, filterOption })\r\n}\r\n\r\nexport const updateData = obj => {\r\n  return (dispatch, getState) => {\r\n    let params = getState().assessment.params;\r\n\r\n    let formData = new FormData();\r\n    formData.append('question', obj.question);\r\n    formData.append('youtubeUrl', obj.youtubeUrl);\r\n    formData.append('videos', obj.videos[0]);\r\n    formData.append('description', obj.description);\r\n    formData.append('level', obj.level);\r\n    formData.append('image', obj.image[0]);\r\n    formData.append('topic', obj.topic);\r\n    formData.append('isMCQ', obj.isMCQ);\r\n    formData.append('MCQs', JSON.stringify(obj.MCQs));\r\n    formData.append('mark', obj.mark);\r\n\r\n    Axios\r\n      .put(\"/assessment/\" + obj._id, formData)\r\n      .then(response => {\r\n        dispatch({ type: Types.UPDATE_ASSESSMENT, obj })\r\n        dispatch(getData(params));\r\n        displaySuccessMessage('Successfully updated!')\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n\r\nexport const getDatabyFilter = (params) => {\r\n  return async (dispatch, getState) => {\r\n    let filter = new Filter(params);\r\n    let query = filter.buildQuery();\r\n    await Axios.get(`/assessments/filter` + query).then(response => {\r\n      dispatch({\r\n        type: Types.FILTER_ASSESSMENT_BY_QUERY,\r\n        data: response.data.assessments,\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const getMyData = (params) => {\r\n  return async (dispatch) => {\r\n    let filter, query = \"\";\r\n\r\n    if(params) {\r\n      filter = new Filter(params);\r\n      query = filter.buildQuery(params);\r\n    }\r\n    await Axios.get(`/tutor/assessments${query}`)\r\n      .then(response => {\r\n        dispatch({\r\n          type: Types.FETCH_ALL_MY_ASSESSMENT,\r\n          data: response.data.assessments,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const deleteData = obj => {\r\n  return dispatch => {\r\n    \r\n    Axios\r\n      .delete(\"/assessment/\" + obj._id)\r\n      .then(response => {\r\n        dispatch({ type: Types.DELETE_ASSESSMENT, obj })\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\nexport const deleteDataByIds = ids => {\r\n  return dispatch => {\r\n    \r\n    Axios\r\n      .put(\"/assessment-delete\", {\r\n        ids\r\n      })\r\n      .then(response => {\r\n        const deletedIds  = response.data.deletedIds\r\n        const relatedData = response.data.relatedData\r\n\r\n        if(deletedIds.length > 0) {\r\n          displaySuccessMessage(`Successfully deleted ${deletedIds.length} data!`)\r\n        }\r\n        if(relatedData.length > 0) {\r\n          displayInfo(`${relatedData.length} data ${relatedData.length > 1 ? \"have\" : \"has\"} relevant data.`);\r\n        }\r\n\r\n        dispatch({ type: Types.DELETE_ASSESSMENTS, ids: deletedIds })\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDropzone } from \"react-dropzone\"\r\nimport { UploadCloud } from \"react-feather\"\r\nimport { Button } from \"reactstrap\"\r\n\r\nfunction BasicDropzone(props) {\r\n\t/*\r\n\t\tprotoTypes = {\r\n\t\t\taccept,  // required // string\r\n\t\t\tplaceholder // string\r\n\t\t\ttype  // image, video\r\n\t\t\tmultiple // bloean // \r\n\t\t\tonLoadFile // func // required\r\n\t\t\tstyle // object // \r\n\r\n\t\t\tlinear-gradient(to right, rgb(86, 171, 47), rgb(168, 224, 99))\r\n\t\t}\r\n\t*/\r\n\r\n\tconst [files, setFiles] = useState([])\r\n\tconst { getRootProps, getInputProps } = useDropzone({\r\n\t  accept: props.accept,\r\n\t  multiple: props.multiple || true,\r\n\t  onDrop: acceptedFiles => {\r\n\t\tsetFiles(\r\n\t\t  acceptedFiles.map(file =>{\r\n\t\t\t\treturn Object.assign(file, {\r\n\t\t\t\t\tprevew: URL.createObjectURL(file)\r\n\t\t\t\t})\r\n\t\t  })\r\n\t\t)\r\n\t  }\r\n\t})\r\n  \r\n\tconst thumbs = files.map(file => (\r\n\t\t<div className=\"dz-thumb p-1\" key={file.name}>\r\n\t\t  <div className=\"dz-thumb-inner overflow-hidden text-center\">\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.type === 'video' && \r\n\t\t\t\t\t<video controls\r\n\t\t\t\t\t\tsrc={file.prevew}\r\n\t\t\t\t\t\tposter={file.prevew}\r\n\t\t\t\t\t\twidth=\"620\"\r\n\t\t\t\t\t\tclassName=\"w-100\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSorry, your browser doesn't support embedded videos, \r\n\t\t\t\t\t\tbut don't worry, you can download it\r\n\t\t\t\t\t\tand watch it with your favorite video player!\r\n\t\t\t\t\t</video>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.type === 'image' && \r\n\t\t\t\t\t\t<img src={file.prevew} className=\"dz-img\" alt={file.name}  height='100' />\r\n\t\t\t\t}\r\n\t\t\t\t<p className='text-white mt-1'>{file.name}</p>\r\n\t\t\t\t\r\n\t\t  </div>\r\n\t\t</div>\r\n\t))\r\n  \r\n\tuseEffect(\r\n\t  () => () => {\r\n\t\t\tfiles.forEach(file => URL.revokeObjectURL(file.prevew))\r\n\t  },\r\n\t  [files]\r\n\t)\r\n\r\n\tuseEffect(\r\n\t\t() => { \r\n\t\t\tprops.onLoadFile(files);\r\n\t\t},\r\n\t\t[files]\r\n\t)\r\n  \r\n\treturn (\r\n\t  <section className='w-100 position-relative' style={props.style || {}}>\r\n\t\t<div className='h-25 ' {...getRootProps({ className: \"dropzone\" })}>\r\n\t\t  <input {...getInputProps()} />\r\n\t\t  {\r\n\t\t\tthumbs.length ? (\r\n\t\t\t  <div className=\"thumb-container m-0 \">{thumbs}</div>\r\n\t\t\t):(\r\n\t\t\t  <div>\r\n\t\t\t\t<div>\r\n\t\t\t\t  <UploadCloud className='w-100 d-block text-center' color='white' size={100}/>\r\n\t\t\t\t  \t<p className='d-blok text-center text-white'>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprops.placeholder ? props.placeholder : \"Drag & drop Files here\"\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t  </div>\r\n\t\t\t)\r\n\t\t  }\r\n\t\t</div>\r\n\t\t{\r\n\t\t\tthumbs.length > 0 && <div className='text-center'><Button className=\t'color-danger' onClick={() => {\r\n\t\t\t\tsetFiles([])\r\n\t\t\t}} >Remove</Button></div>\r\n\t\t}\r\n\t  </section>\r\n\t)\r\n}\r\n  \r\n\r\nexport default BasicDropzone","import React from \"react\"\r\nimport { Editor } from \"react-draft-wysiwyg\"\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\n// import textToHtmlParser from 'html-react-parser';\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\"\r\nimport \"../../assets/scss/plugins/extensions/editor.scss\"\r\n\r\nclass EditorImage extends React.Component {\r\n  state = { \r\n    editorState: null,\r\n    content: null\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if(this.state.content === null && nextProps.html !== \"\") {\r\n      this.htmlToState(nextProps.html)\r\n    }\r\n  }\r\n\r\n  htmlToState = (html) => {\r\n    const contentBlock = htmlToDraft(html);\r\n    if (contentBlock) {\r\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      \r\n      this.setState({\r\n        editorState: editorState,\r\n        content: html\r\n      })\r\n    }\r\n  }\r\n\r\n  uploadImageCallBack = file => {\r\n    return new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest()\r\n      xhr.open(\"POST\", \"https://api.imgur.com/3/image\")\r\n      xhr.setRequestHeader(\"Authorization\", \"Client-ID 7e1c3e366d22aa3\")\r\n      const data = new FormData()\r\n      data.append(\"image\", file)\r\n      xhr.send(data)\r\n      xhr.addEventListener(\"load\", () => {\r\n        const response = JSON.parse(xhr.responseText)\r\n        resolve(response)\r\n      })\r\n      xhr.addEventListener(\"error\", () => {\r\n        const error = JSON.parse(xhr.responseText)\r\n        reject(error)\r\n      })\r\n    })\r\n  }\r\n\r\n  handleUpdate = (changedEditorState) => {\r\n    this.setState({\r\n      editorState: changedEditorState\r\n    })\r\n    this.props.onChange(draftToHtml(convertToRaw(changedEditorState.getCurrentContent())))\r\n  }\r\n  \r\n  render() {\r\n    const { editorState } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Editor\r\n          editorState={editorState}\r\n          wrapperClassName=\"demo-wrapper\"\r\n          editorClassName=\"demo-editor\"\r\n          toolbar={{\r\n            inline: { inDropdown: true },\r\n            list: { inDropdown: true },\r\n            textAlign: { inDropdown: true },\r\n            link: { inDropdown: true },\r\n            history: { inDropdown: true },\r\n            image: {\r\n              uploadCallback: this.uploadImageCallBack,\r\n              previewImage: true,\r\n              alt: { present: true, mandatory: true }\r\n            }\r\n          }}\r\n          onEditorStateChange={this.handleUpdate}\r\n        />\r\n        {/* <textarea\r\n          disabled\r\n          value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\r\n        /> */}\r\n        {/* {\r\n          textToHtmlParser(draftToHtml(convertToRaw(editorState.getCurrentContent()))) /}*\r\n        {/* } */}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditorImage\r\n","import React, { Component } from 'react'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Form,\r\n  Button,\r\n  Label,\r\n  InputGroup,\r\n\tInputGroupAddon,\r\n} from \"reactstrap\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport Checkbox from \"../../../components/@vuexy/checkbox/CheckboxesVuexy\"\r\nimport BasicDropZone from \"../../../components/Wrappers/BasicDropZone\"\r\nimport { Check } from \"react-feather\"\r\nimport Editor from '../../../components/Wrappers/Editor'\r\nimport {subRooter} from \"../../../configs/vars\";\r\nimport * as Feather from \"react-feather\";\r\nimport Select from \"react-select\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getInitialData as getLevels } from \"../../../redux/actions/level\"\r\nimport { getParentData as getCategories} from \"../../../redux/actions/category\"\r\nimport { getDataByType as getTopics } from \"../../../redux/actions/topic\"\r\nimport { getQueryStringValue } from \"../../../service/helper\";\r\nimport { addData as addAssessment, updateData, getDatabyFilter } from \"../../../redux/actions/assessment\"\r\n\r\nconst markOptions = [\r\n  { value: 1, label: \"1\" },\r\n  { value: 2, label: \"2\" },\r\n  { value: 3, label: \"3\" },\r\n  { value: 4, label: \"4\" },\r\n  { value: 5, label: \"5\" },\r\n  { value: 10, label: \"10\" },\r\n]\r\n\r\nexport class AssessmentForm extends Component {\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if(props.filteredData[0] &&!Object.is(props.filteredData[0], state.currentData)) {\r\n      let currentData = props.filteredData[0];\r\n\r\n      return {\r\n        id: currentData._id,\r\n        currentData: currentData,\r\n\t\t\t\tquestion: currentData.question,\r\n\t\t\t\tyoutubeUrl: currentData.youtubeUrl,\r\n        MCQs: currentData.MCQs,\r\n\t\t\t\tdescription: currentData.description, // html content\r\n\t\t\t\tselectedCategoryId: currentData.topic.categoryId._id,\r\n\t\t\t\tselectedTopicId: currentData.topic._id,\r\n        selectedLevelId: currentData.level._id,\r\n        isMCQ: currentData.isMCQ,\r\n        mark: currentData.mark\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n\tstate = {\r\n\t\tquestion: '',\r\n\t\tyoutubeUrl: '',\r\n\t\tuploadedImages: [],\r\n\t\tuploadedVideos: [],\r\n    MCQs: [\r\n      {\r\n        index: 0,\r\n        isCorrect: false,\r\n        text: ''\r\n      }\r\n    ],\r\n    isMCQ: false,\r\n    description: \"\",\r\n    mark: 1,\r\n    isInvalid: false,\r\n\r\n    // edit\r\n    selectedLevelId: '',\r\n    selectedCategoryId: '', \r\n    selectedTopicId: '',\r\n    currentData: null,\r\n  }\r\n  formtype = \"\"\r\n  \r\n  componentDidMount() {\r\n    this.props.getLevels()\r\n    this.props.getCategories()\r\n    this.props.getTopics('ASSESSMENT')\r\n    this.formtype = getQueryStringValue('type');\r\n\t\tlet id = getQueryStringValue('id');\r\n    // let currentData = this.props.allAssessments.find((elt) => elt._id === id)\r\n\r\n    if(id !== \"\") {\r\n      this.props.getDatabyFilter({_id: id});\r\n    } else {\r\n      this.initdata();\r\n    }\r\n  }\r\n\r\n  initdata = () => {\r\n    this.setState({\r\n      question: '',\r\n      youtubeUrl: '',\r\n      uploadedImages: [],\r\n      uploadedVideos: [],\r\n      MCQs: [\r\n        {\r\n          index: 0,\r\n          isCorrect: false,\r\n          text: ''\r\n        }\r\n      ],\r\n      isMCQ: false,\r\n      description: \"\",\r\n      mark: 1,\r\n      isInvalid: false,\r\n\r\n      // edit\r\n      selectedLevelId: '',\r\n      selectedCategoryId: '', \r\n      selectedTopicId: '',\r\n      currentData: null,\r\n    })\r\n  }\r\n\r\n\thandleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.isValid(this.state, this.formtype)) {\r\n      this.setState({\r\n        isInvalid: false\r\n      })\r\n\t\t\tif(this.formtype !== 'edit') {\r\n\t\t\t\tthis.props.addAssessment({\r\n\t\t\t\t\tquestion: this.state.question,\r\n\t\t\t\t\tlevel: this.state.selectedLevelId,\r\n\t\t\t\t\tyoutubeUrl: this.state.youtubeUrl,\r\n\t\t\t\t\timage: this.state.uploadedImages,\r\n\t\t\t\t\tvideos: this.state.uploadedVideos,\r\n\t\t\t\t\tMCQs: this.state.MCQs,\r\n\t\t\t\t\tdescription: this.state.description,\r\n          topic: this.state.selectedTopicId,\r\n          isMCQ: this.state.isMCQ,\r\n          mark: this.state.mark,\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tthis.props.updateData({\r\n\t\t\t\t\t_id: this.state.id,\r\n\t\t\t\t\tquestion: this.state.question,\r\n\t\t\t\t\tlevel: this.state.selectedLevelId,\r\n\t\t\t\t\tyoutubeUrl: this.state.youtubeUrl,\r\n\t\t\t\t\timage: this.state.uploadedImages,\r\n\t\t\t\t\tvideos: this.state.uploadedVideos,\r\n\t\t\t\t\tMCQs: this.state.MCQs,\r\n\t\t\t\t\tdescription: this.state.description,\r\n          topic: this.state.selectedTopicId,\r\n          isMCQ: this.state.isMCQ,\r\n          mark: this.state.mark,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} else {\r\n      this.setState({\r\n        isInvalid: true\r\n      })\r\n    }\r\n  }\r\n  \r\n  isValid = (state, type) => {\r\n\t\tif(type === 'edit') {\r\n\t\t\treturn state.question && state.selectedCategoryId && state.selectedTopicId && state.selectedLevelId\r\n\t\t} else {\r\n\t\t\treturn state.question && state.selectedCategoryId && state.selectedTopicId && state.selectedLevelId\r\n\t\t}\r\n\t}\r\n\r\n\thandleFiles = (type, files) => { // type = string\r\n\t\tif(type === 'image') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tuploadedImages: files\r\n\t\t\t})\r\n\t\t} else if(type === 'video') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tuploadedVideos: files\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\thandleEditor = (strAsHtml) => {\r\n    if(!Object.is(this.state.description, strAsHtml)) {\r\n      this.setState({\r\n        description: strAsHtml\r\n      })\r\n    }\r\n\t}\r\n\r\n\thandleChange = (name, type) => {\r\n\t\tthis.setState({\r\n\t\t\t[name]: type\r\n\t\t})\r\n  }\r\n  \r\n  addNewMCQ = () => {\r\n    let MCQs = this.state.MCQs;\r\n    const newMCQ = {\r\n      index: MCQs.length,\r\n      isCorrect: false,\r\n      text: ''\r\n    }\r\n    MCQs.push(newMCQ);\r\n    this.setState({\r\n      MCQs: MCQs.slice()\r\n    })\r\n  }\r\n\r\n  handelChangeMCQValueByIndex = (index, value) => {\r\n    if(typeof index === 'undefined') {\r\n      alert(\"You need to pass index\")\r\n    }\r\n    let mcqs = this.state.MCQs;\r\n    mcqs[index].text = value;\r\n\r\n    this.setState({\r\n      MCQs: mcqs\r\n    })\r\n  }\r\n\r\n  handleDeleteMCQByIndex = (index) => {\r\n    let newMCQs = this.state.MCQs.filter((mcq, i) => \r\n      index  !== i\r\n    );\r\n\r\n    this.setState({\r\n      MCQs: newMCQs\r\n    })\r\n  }\r\n\r\n  checkMCQCorrectAnswer = (index) => {\r\n    let mcqs = this.state.MCQs;\r\n    mcqs[index].isCorrect = !mcqs[index].isCorrect;\r\n\r\n    this.setState({\r\n      MCQs: mcqs\r\n    })\r\n  }\r\n\r\n\trenderCategory = (categories) => {\r\n\t\tlet result = []\r\n\t\tfor (const category of categories) {\r\n\t\t\tresult.push({\r\n\t\t\t\tvalue: category._id,\r\n\t\t\t\tlabel: category.name,\r\n\t\t\t\tisDisabled: category.children && category.children.length > 0,\r\n\t\t\t});\r\n\r\n\t\t\tif(category.children) {\r\n\t\t\t\tfor (const child of category.children) {\r\n\t\t\t\t\tresult.push({\r\n\t\t\t\t\t\tvalue: child._id,\r\n\t\t\t\t\t\tlabel: <span style={{paddingLeft: '3px'}} className='pl-1'>{child.name}</span>,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\trender() {\r\n    const { \r\n      MCQs, \r\n      isMCQ,\r\n      mark, \r\n      description, \r\n      selectedLevelId,\r\n\t\t\tselectedCategoryId, \r\n      selectedTopicId,\r\n      question,\r\n      youtubeUrl,\r\n      currentData\r\n    } = this.state;\r\n    const {\r\n      topics, levels, categories\r\n    } = this.props;\r\n\r\n    if(MCQs.length === 0) {\r\n\t\t\tthis.addNewMCQ();\r\n    }\r\n\r\n    let subjectOptions = topics.filter((topic) => {\r\n\t\t\treturn topic.levelId._id === selectedLevelId && topic.categoryId._id === selectedCategoryId\r\n\t\t}).map((elt) => ({value: elt._id, label: elt.name}));\r\n    \r\n    const levelOptions = levels.map((level) => ({\r\n      value: level._id,\r\n      label: level.name\r\n    }));\r\n\r\n    const categoryOptions = this.renderCategory(categories);\r\n    \r\n\t\treturn (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Assessment\"\r\n          breadCrumbParent=\"Area\"\r\n          breadCrumbActive={`${this.formtype === 'edit' ? \"Edit Assessment\"  : \"New Assessment\"}`}\r\n        />\r\n        <div className='ml-1 mb-1'>\r\n          <Button.Ripple outline color=\"info\"  onClick={() => {this.props.history.push(`${subRooter}/assessment`)}}>\r\n            <Feather.ArrowLeft size={20} />\tBack to List\r\n          </Button.Ripple>\r\n        </div>\r\n\r\n        <Card>\r\n          <CardBody>\r\n            <Form className='text-left' onSubmit={this.handleOnSubmit}  >\r\n              <Row>\r\n                <Col md='2' xs='12' xl='2' style={{zIndex: 1001}}>\r\n                  <div className='m-auto'>\r\n                    <FormGroup>\r\n                      <h5 className=\"my-1 text-bold-500 text-center\">Mark</h5>\r\n                      <Select\r\n                        className=\"React\"\r\n                        classNamePrefix=\"select\"\r\n                        name=\"mark\"\r\n                        options={markOptions}\r\n                        value={markOptions.find((elt) => elt.value === mark)}\r\n                        onChange={e => this.setState({mark: e.value})}\r\n                      />\r\n                    </FormGroup>\r\n                  </div>\r\n                </Col>\r\n                <Col md='10' xs='12' xl='10'>\r\n                  <Row>\r\n                    <Col md='3' sm=\"12\" style={{zIndex: 1000}}>\r\n                      <FormGroup>\r\n                        <Label for=\"level\">Select Level</Label>\r\n                        <Select\r\n                          className=\"React\"\r\n                          classNamePrefix=\"select\"\r\n                          name=\"level\"\r\n                          id=\"level\"\r\n                          value={levelOptions.find((elt) => elt.value === selectedLevelId)}\r\n                          options={levelOptions}\r\n                          onChange={(e) => this.setState({\r\n                            selectedLevelId: e.value,\r\n                            selectedTopicId: \"\"\r\n                          })}\r\n                        />\r\n                        {\r\n                          !selectedLevelId && <p className='text-danger'>please select level!</p>\r\n                        }\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md='3' sm=\"12\" style={{zIndex: 999}}>\r\n                      <FormGroup>\r\n                        <Label for=\"category\">Select Category</Label>\r\n                        {\r\n                          console.log(categoryOptions.find((elt) => elt.value === selectedCategoryId))\r\n                        }\r\n                        {\r\n                          console.log(\"selectedCategoryId\", selectedCategoryId)\r\n                        }\r\n                        <Select\r\n                          className=\"React\"\r\n                          classNamePrefix=\"select\"\r\n                          name=\"category\"\r\n                          id=\"category\"\r\n                          options={categoryOptions}\r\n                          value={categoryOptions.find((elt) => elt.value === selectedCategoryId)}\r\n                          onChange={(e) => this.setState({\r\n                            selectedCategoryId: e.value,\r\n                            selectedTopicId: \"\"\r\n                          })}\r\n                        />\r\n                        {\r\n                          !selectedCategoryId && <p className='text-danger'>please select level!</p>\r\n                        }\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md='5' sm=\"10\" style={{zIndex: 998}}>\r\n                      <FormGroup>\r\n                        <Label for=\"topic\">Select Topic</Label>\r\n                        <Select\r\n                          className=\"React\"\r\n                          classNamePrefix=\"select\"\r\n                          name=\"topic\"\r\n                          id=\"topic\"\r\n                          options={subjectOptions}\r\n                          value={subjectOptions.find((elt) => elt.value === selectedTopicId)}\r\n                          onChange={(e) => this.setState({\r\n                            selectedTopicId: e.value\r\n                          })}\r\n                        />\r\n                        {\r\n                          !selectedTopicId && <p className='text-danger'>please select level!</p>\r\n                        }\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md='1' sm=\"2\" className='mt-2'>\r\n                      <FormGroup>\r\n                        <Link to={`${subRooter}/topics`}>\r\n                          <Feather.PlusCircle size={30}  />\r\n                        </Link>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label for=\"question\">Question</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"question\"\r\n                          id=\"question\"\r\n                          placeholder=\"Input Question\"\r\n                          value={question}\r\n                          onChange={(e) => this.setState({\r\n                            question: e.target.value\r\n                          })}\r\n                          invalid={question === \"\"}\r\n                        />\r\n                        {\r\n                          question === '' && <span className='invalid-tooltip'>please input name</span>\r\n                        }\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md='12' >\r\n                        <Card>\r\n                          <Label for=\"description\" className='pb-1'>Description</Label>\r\n                          <Editor id='description' html={description} onChange={(values) => this.handleEditor(values)}/>\r\n                        </Card>\r\n                      </Col>\r\n                    {/* file upload form start */}\r\n                    <Col md='12'>\r\n                      <Row className='mb-1'>\r\n                        <Col md='6'>\r\n                          {\r\n                            currentData && currentData.imgUrl ?\r\n                            <Row className='m-1'>\r\n                              <Col md='12'>\r\n                                <img className='w-100' src={currentData.imgUrl} alt=\"\" />\r\n                              </Col>\r\n                              <Col md='12' className='text-right mt-1'>\r\n                                <Button.Ripple\r\n                                  color=\"danger\"\r\n                                  className=\"mb-1\"\r\n                                  onClick={() => {\r\n                                    let temp = currentData\r\n                                    temp.imgUrl = \"\"\r\n                                    this.setState({\r\n                                      currentData: temp\r\n                                    })\r\n                                  }}\r\n                                >\r\n                                  Remove\r\n                                </Button.Ripple>\r\n                              </Col>\r\n                            </Row>\r\n                          :\r\n                          <>\r\n                            <BasicDropZone \r\n                              accept=\"image/*\" \r\n                              type=\"image\"\r\n                              placeholder=\"Image File\" \r\n                              multiple={false}\r\n                              onLoadFile={(files) => this.handleFiles('image', files)}\r\n                              style={{background: 'linear-gradient(to right, rgb(86, 171, 47), rgb(168, 224, 99))'}}\r\n                            />\r\n                          </>\r\n                          }\r\n                        </Col>\r\n                        <Col md='6'>\r\n                          {\r\n                            currentData && currentData.videos &&  currentData.videos.length > 0 && currentData.videos[0] !== \"\" ? \r\n                            <Row className='m-1'>\r\n                              <Col md='12'>\r\n                                <video controls\r\n                                  src={currentData.videos[0]}\r\n                                  width=\"620\"\r\n                                  className=\"w-100\"\r\n                                >\r\n                                  Sorry, your browser doesn't support embedded videos, \r\n                                  but don't worry, you can download it\r\n                                  and watch it with your favorite video player!\r\n                                </video>\r\n                              </Col>\r\n                              <Col md='12' className='text-right'>\r\n                                  <Button.Ripple\r\n                                    color=\"danger\"\r\n                                    className=\"mb-1\"\r\n                                    onClick={() => {\r\n                                      let temp = currentData\r\n                                      temp.videos = []\r\n                                      this.setState({\r\n                                        currentData: temp\r\n                                      })\r\n                                    }}\r\n                                  >\r\n                                    Remove\r\n                                  </Button.Ripple>\r\n                              </Col>\r\n                            </Row>\r\n                            :\r\n                            <BasicDropZone \r\n                              accept=\".avi, .mp4, mpg, .ogg\"\r\n                              type=\"video\"\r\n                              placeholder=\"Video Files\"\r\n                              onLoadFile={(files) => this.handleFiles('video', files)}\r\n                              style={{background: 'linear-gradient(to right, rgb(86, 171, 47), rgb(168, 224, 99))'}}\r\n                            />\r\n                          }\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    {/* file upload form end */}\r\n                    <Col sm=\"12\">\r\n                      <FormGroup>\r\n                        <Label for=\"youtube-url\">Youtube URL</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"youtubeUrl\"\r\n                          id=\"youtube-url\"\r\n                          placeholder=\"Youtube URL\"\r\n                          value={youtubeUrl}\r\n                          onChange={(e) => this.setState({\r\n                            youtubeUrl: e.target.value  \r\n                          })}\r\n                          invalid={! /^(https?\\:\\/\\/)?(www\\.youtube\\.com|youtu\\.?be)\\/.+$/.test(youtubeUrl) && youtubeUrl !== ''  && <p className='text-danger'>This is invalid youtube url</p>}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  {/* input answers start */}\r\n                  <Row>\r\n                    <Col>\r\n                      <div className=\"d-inline-block mr-1\">\r\n                        <Checkbox\r\n                          color=\"primary\"\r\n                          icon={<Check className=\"vx-icon\" size={16} />}\r\n                          label=\"MCQ\"\r\n                          checked={isMCQ}\r\n                          value={this.state.isMCQ}\r\n                          onChange={() => {\r\n                            if(isMCQ) {\r\n                              this.setState({isMCQ: !isMCQ })\r\n                            } else {\r\n                              this.setState({\r\n                                isMCQ: !isMCQ,\r\n                                MCQs: [\r\n                                  {\r\n                                    index: 0,\r\n                                    isCorrect: false,\r\n                                    text: ''\r\n                                  }\r\n                                ],\r\n                              })\r\n                            }\r\n                          }}\r\n                        />\r\n                        {\r\n                            console.log(\"this.state.isMCQ\", this.state.isMCQ)\r\n                          }\r\n                      </div>\r\n                      {/* <div className=\"d-inline-block mr-1\">\r\n                        <Checkbox\r\n                          color=\"primary\"\r\n                          icon={<Check className=\"vx-icon\" size={16} />}\r\n                          checked={optionType === 'Written'}\r\n                          label=\"Written\"\r\n                          onChange={() => this.handleChange(\"optionType\", 'Written')}\r\n                        />\r\n                      </div>\r\n                      <div className=\"d-inline-block mr-1\">\r\n                        <Checkbox\r\n                          color=\"primary\"\r\n                          icon={<Mic className=\"vx-icon\" size={16} />}\r\n                          checked={optionType === 'Recording'}\r\n                          label=\"Recording\"\r\n                          onChange={() => this.handleChange(\"optionType\", 'Recording')}\r\n                        />\r\n                      </div> */}  \r\n                    </Col>\r\n                  </Row>\r\n                  {\r\n                    isMCQ && <Row>\r\n                      {\r\n                        ! MCQs.find((elt) => elt.isCorrect === true) && <p className='text-danger'>Please select correct answer</p>\r\n                      }\r\n                        <pre>\r\n                        {\r\n                          console.log(\"MCQs12312321\", MCQs)\r\n                        }\r\n                      </pre>\r\n                      <Col md='12'>\r\n                        <FormGroup>\r\n                          <InputGroup>\r\n                            <Input \r\n                              value={MCQs[0].text}\r\n                              onChange={(e) => this.handelChangeMCQValueByIndex(0, e.target.value)}\r\n                            />\r\n                            <InputGroupAddon addonType=\"append\">\r\n                              {/* <div className=\"d-inline-block mr-1\"> */}\r\n                                <Checkbox\r\n                                  color=\"primary\"\r\n                                  icon={<Check className=\"vx-icon\" size={16} />}\r\n                                  label=\"Correct Answer\"\r\n                                  checked={MCQs[0].isCorrect}\r\n                                  value={MCQs[0].isCorrect}\r\n                                  onChange={() => this.checkMCQCorrectAnswer(0)}\r\n                                  className='pl-1 bg-primary'\r\n                                />\r\n                              {/* </div> */}\r\n                              <Button.Ripple color=\"success\"\r\n                                onClick={this.addNewMCQ}\r\n                              >\r\n                                <Feather.PlusSquare size={24} />\r\n                              </Button.Ripple>\r\n                            </InputGroupAddon>\r\n                          </InputGroup>\r\n                        </FormGroup>\r\n                        {\r\n                          MCQs.length\t > 1 && MCQs.map((MCQ, index) => {\r\n                            if(index === 0) { return null; }\r\n                            return (\r\n                              <FormGroup key={index}>\r\n                                <InputGroup>\r\n                                  <Input value={MCQ.text} onChange={(e) => this.handelChangeMCQValueByIndex(index, e.target.value)} />\r\n                                  <InputGroupAddon addonType=\"append\">\r\n                                    <Checkbox\r\n                                      color=\"primary\"\r\n                                      icon={<Check className=\"vx-icon\" size={16} />}\r\n                                      label=\"Correct Answer\"\r\n                                      value={ MCQ.isCorrect }\r\n                                      checked={MCQ.isCorrect }\r\n                                      onChange={() => this.checkMCQCorrectAnswer(index)}\r\n                                      className='pl-1 bg-primary'\r\n                                    />\r\n                                    <Button.Ripple color=\"danger\"\r\n                                      onClick={() => this.handleDeleteMCQByIndex(index)}\r\n                                    >\r\n                                      <Feather.Trash2 size={24} />\r\n                                    </Button.Ripple>\r\n                                  </InputGroupAddon>\r\n                                </InputGroup>\r\n                              </FormGroup>\r\n                            )\r\n                          })\r\n                        }\r\n                      </Col>\r\n                    </Row>\r\n                  }\r\n                  {/* {\r\n                    optionType === 'Recording' && <AudioRecorder />\r\n                  } */}\r\n                  {/* input answers end */}\r\n                  {/* actions start */}\r\n                  <Row>\r\n                    <Col sm=\"12\">\r\n                      <FormGroup className='text-right'>\r\n                        {\r\n                          this.state.isInvalid && <p className='text-danger'>please check above fields</p>\r\n                        }\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          type=\"submit\"\r\n                          className=\"mr-1 mb-1\"\r\n                        >\r\n                          Submit\r\n                        </Button.Ripple>\r\n                        {/* <Button.Ripple\r\n                          outline\r\n                          color=\"warning\"\r\n                          type=\"reset\"\r\n                          className=\"mb-1\"\r\n                        >\r\n                          Reset\r\n                        </Button.Ripple> */}\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                  {/* actions end */}\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nconst mapStateToProps = (state) => {  \r\n\treturn {\r\n\t\tlevels: state.level.allData,\r\n\t\tcategories: state.category.allData,\r\n    topics: state.topic.dataPerType,\r\n    allAssessments: state.assessment.allData,\r\n    filteredData: state.assessment.queryData\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tgetLevels,\r\n\tgetCategories,\r\n\tgetTopics,\r\n  updateData,\r\n  addAssessment,\r\n  getDatabyFilter\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AssessmentForm)"],"sourceRoot":""}