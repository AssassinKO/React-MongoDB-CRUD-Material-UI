{"version":3,"sources":["components/@vuexy/checkbox/CheckboxesVuexy.js","components/@vuexy/breadCrumbs/BreadCrumb.js","service/helper.js","redux/actions/classess/QueryBuilder.js","redux/actions/assigned/assignedFilterClass.js","redux/actions/assigned/index.js","redux/actions/email/index.js","redux/actions/assessment/filterClass.js","redux/actions/assessment/index.js","assets/img/pages/card-image-6.jpg","components/Wrappers/AudioRecorder.js","redux/actions/answer/index.js","views/pages/MyWorksheets/Components/AssignItem.js","views/pages/MyWorksheets/AssignDetails.js","views/pages/MyWorksheets/AssignList.js","views/pages/MyWorksheets/index.js"],"names":["CheckBoxesVuexy","className","this","props","color","type","defaultChecked","checked","value","disabled","onClick","onChange","size","icon","label","React","Component","BreadCrumbs","breadCrumbTitle","tag","to","subRooter","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","active","breadCrumbActive","matchYMD","date","sub","substr","indexOf","length","split","join","replace","getQueryStringValue","key","decodeURIComponent","window","location","search","RegExp","encodeURIComponent","QueryBuilder","siteUrl","query","set","field","get","AssignedFilter","params","buildQuery","_id","title","worksheet","assignedTo","createdBy","startTime","endTime","addData","description","dispatch","Axios","post","then","response","Types","obj","data","assign","displaySuccessMessage","catch","displayServerErrorMessage","updateData","put","getAssignedListByFilter","Filter","assignedList","deleteData","delete","success","displayErrorMessage","getEmails","routeParams","a","axios","result","mails","err","console","log","StarEmail","id","mailId","searchMail","val","getState","selectMail","selectAllMails","deselectAllMails","moveMail","selectedEmails","emailApp","mailFolder","unreadMails","unreadFlag","emailIds","setLabel","error","changeFilter","filter","history","push","topic","level","question","isMCQ","deleted","category","getData","page","perPage","assessments","totalPages","assessment","videos","formData","FormData","append","youtubeUrl","image","JSON","stringify","MCQs","mark","doc","getInitialData","filterData","filterOption","getDatabyFilter","deleteDataByIds","ids","deletedIds","relatedData","displayInfo","module","exports","AudioRecorder","state","audioDetails","url","blob","chunks","duration","h","m","s","handleAudioStop","setState","handleAudioUpload","file","onClickUpload","record","audioURL","showUIAudio","handleRest","getAnswersOfAssign","assignId","assessmentId","answers","AssignItem","checkedMCQIndex","answerText","handleSelectCorrectMCQ","index","handleVoiceUpload","Bolbfile","submitVoiceAnswer","assignItem","currentQuestion","voiceBlobFile","handleSubmitMCQ","submitMCQAnswer","selectedIndex","handleSubmitText","submitTextAnswer","textAnswer","e","target","toggle","tab","prevProps","prevState","Object","is","currentAnswer","find","elt","Fragment","Badge","pill","Row","Col","sm","md","imgUrl","src","alt","width","style","borderRadius","border","controls","display","firstname","lastname","name","categoryId","htmlParser","isCorrect","undefined","map","mcq","text","Button","Ripple","Nav","tabs","NavItem","NavLink","classnames","TabContent","activeTab","TabPane","tabId","Input","rows","placeholder","readOnly","voiceUrl","mapDispatchToProps","connect","answer","EmailDetails","showReplies","collapseID","currentQuestionId","toggleCollapse","handleSelectQuestion","item","currentAssign","currentStatus","handleEmailDetails","options","wheelPropagation","Card","CardHeader","createdAt","background","CardTitle","Collapse","isOpen","onEntering","onEntered","onExiting","onExited","CardBody","ListGroup","flush","ListGroupItem","Classnames","queryAssessments","queryData","EmailList","emailDetailsVisibility","selectAll","currentFilter","routerProps","match","selectedAssign","detailsVisibility","status","handleOnChange","getFilteredAssignList","createrName","startsWithCondition","toLowerCase","startsWith","includesCondition","includes","auth","userinfo","renderMails","lg","CardImg","overlayImg1","CardImgOverlay","outline","FormGroup","email","stopPropagation","UncontrolledDropdown","DropdownToggle","DropdownMenu","right","DropdownItem","height","toggleStarred","currentParam","nextProps","starred","assigned","filteredList","mql","matchMedia","Email","composeMailStatus","sidebarDocked","matches","sidebarOpen","handleComposeSidebar","onSetSidebarOpen","open","mediaQueryChanged","handleMainAndComposeSidebar","addListener","removeListener","mainSidebar"],"mappings":"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","file":"static/js/23.46d0a03c.chunk.js","sourcesContent":["import React from \"react\"\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : \"\"\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : \"md\"\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n","import React from \"react\"\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  // UncontrolledButtonDropdown,\r\n  // DropdownMenu,\r\n  // DropdownItem,\r\n  // DropdownToggle\r\n} from \"reactstrap\"\r\nimport { Home } from \"react-feather\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { subRooter } from \"../../../configs/vars\"\r\n\r\n\r\nclass BreadCrumbs extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"content-header row\">\r\n        <div className=\"content-header-left col-md-9 col-12 mb-2\">\r\n          <div className=\"row breadcrumbs-top\">\r\n            <div className=\"col-12\">\r\n              {this.props.breadCrumbTitle ? (\r\n                <h2 className=\"content-header-title float-left mb-0\">\r\n                  {this.props.breadCrumbTitle}\r\n                </h2>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <div className=\"breadcrumb-wrapper vx-breadcrumbs d-sm-block d-none col-12\">\r\n                <Breadcrumb tag=\"ol\">\r\n                  <BreadcrumbItem tag=\"li\">\r\n                    <NavLink to={subRooter}>\r\n                      <Home className=\"align-top\" size={15} />\r\n                    </NavLink>\r\n                    {/* <a href=\"/\" target=\"_blank\">\r\n                      <Home className=\"align-top\" size={15} />\r\n                    </a> */}\r\n                  </BreadcrumbItem>\r\n                  <BreadcrumbItem tag=\"li\" className=\"text-primary\">\r\n                    {this.props.breadCrumbParent}\r\n                  </BreadcrumbItem>\r\n                  {this.props.breadCrumbParent2 ? (\r\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\r\n                      {this.props.breadCrumbParent2}\r\n                    </BreadcrumbItem>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {this.props.breadCrumbParent3 ? (\r\n                    <BreadcrumbItem tag=\"li\" className=\"text-primary\">\r\n                      {this.props.breadCrumbParent3}\r\n                    </BreadcrumbItem>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  <BreadcrumbItem tag=\"li\" active>\r\n                    {this.props.breadCrumbActive}\r\n                  </BreadcrumbItem>\r\n                </Breadcrumb>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"content-header-right text-md-right col-md-3 col-12 d-md-block d-none\">\r\n          <div className=\"form-group breadcrum-right dropdown\">\r\n            <UncontrolledButtonDropdown>\r\n              <DropdownToggle\r\n                color=\"primary\"\r\n                size=\"sm\"\r\n                className=\"btn-icon btn-round dropdown-toggle\"\r\n              >\r\n                <Settings\r\n                  size={14}\r\n                  style={{\r\n                    left: 0\r\n                  }}\r\n                />\r\n              </DropdownToggle>\r\n              <DropdownMenu tag=\"ul\" right>\r\n                <DropdownItem tag=\"li\">\r\n                  <NavLink className=\"text-dark w-100\" to=\"/chat\">\r\n                    Chat\r\n                  </NavLink>\r\n                </DropdownItem>\r\n                <DropdownItem tag=\"li\">\r\n                  <NavLink className=\"text-dark w-100\" to=\"/email/inbox\">\r\n                    Email\r\n                  </NavLink>\r\n                </DropdownItem>\r\n                <DropdownItem tag=\"li\">\r\n                  <NavLink className=\"text-dark w-100\" to=\"/calendar\">\r\n                    Calendar\r\n                  </NavLink>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledButtonDropdown>\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default BreadCrumbs\r\n","\r\nexport const matchYMD = (date) => {\r\n  let sub = date.substr(date.indexOf('.'), date.length);\r\n  date = date.split(sub).join(\" \");\r\n  return date.replace(/t/gi, ' ')\r\n}\r\n\r\nexport const getQueryStringValue =  function (key) {  \r\n  return decodeURIComponent(window.location.search.replace(new RegExp(\"^(?:.*[&\\\\?]\" + encodeURIComponent(key).replace(/[\\.\\+\\*]/g, \"\\\\$&\") + \"(?:\\\\=([^&]*))?)?.*$\", \"i\"), \"$1\"));  \r\n}","class QueryBuilder {\r\n  siteUrl = ''\r\n  query = '?'\r\n  constructor(siteUrl) {\r\n    if(siteUrl !== '') {\r\n      this.siteUrl = siteUrl\r\n    } else {\r\n      this.siteUrl = ''\r\n    }\r\n  }\r\n\r\n  set = (field, value) => {\r\n    if(this.query.indexOf('=') > -1) {\r\n      this.query += '&'\r\n    }\r\n    this.query += `${field}=${value}`\r\n  }\r\n\r\n  get = () => {\r\n    return this.siteUrl + this.query; \r\n  }\r\n}\r\n\r\nexport default QueryBuilder","import QueryBuilder from '../classess/QueryBuilder'\r\n\r\nclass AssignedFilter {\r\n  _id // id \r\n  title // string\r\n  worksheet // worksheetid\r\n  assignedTo // students id\r\n  createdBy // user id\r\n  startTime // period type is date\r\n  endTime // date\r\n\r\n  constructor(params) {\r\n    this._id        = params._id\r\n    this.title      = params.title\r\n    this.worksheet = params.worksheet\r\n    this.assignedTo = params.assignedTo\r\n    this.createdBy  = params.createdBy\r\n    this.startTime  = params.startTime\r\n    this.endTime  = params.endTime\r\n  }\r\n\r\n  buildQuery = () => {\r\n    let query = new QueryBuilder('')\r\n    if(this._id) {\r\n      query.set('_id', this._id);\r\n    }\r\n    if(this.title) {\r\n      query.set('title', this.title);\r\n    }\r\n    if(this.worksheet) {\r\n      query.set('worksheet', this.worksheet);\r\n    }\r\n    if(this.assignedTo) {\r\n      query.set('assignedTo', this.assignedTo);\r\n    }\r\n    if(this.createdBy) {\r\n      query.set('createdBy', this.createdBy);\r\n    }\r\n    if(this.startTime) {\r\n      query.set('startTime', this.startTime);\r\n    }\r\n    if(this.endTime) {\r\n      query.set('endTime', this.endTime);\r\n    }\r\n\r\n    var queryStr = query.get();\r\n    return queryStr;\r\n  }\r\n}\r\n\r\nexport default AssignedFilter;","import * as Types from \"../types\";\r\nimport { Axios } from \"../root\"\r\nimport { displaySuccessMessage, displayServerErrorMessage, displayErrorMessage } from '../../../service/Alert';\r\nimport Filter from \"./assignedFilterClass\";\r\n\r\nexport const addData = ({ title, description, worksheet, assignedTo }) => {\r\n  return  dispatch => {\r\n    Axios\r\n      .post(\"/assign/create\", {\r\n        title, description, worksheet, assignedTo\r\n      })\r\n      .then(response => {\r\n        dispatch({ type: Types.ADD_ASSIGN, obj: response.data.assign })\r\n        displaySuccessMessage('Successfully assigned!')\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n\r\nexport const updateData = ({title, description, worksheet, _id}) => {\r\n  return  dispatch => {\r\n    Axios\r\n      .put(`/assign/update/${_id}`, {\r\n        title, description, worksheet\r\n      })\r\n        .then(response => {\r\n          dispatch({ type: Types.UPDATE_ASSIGN, obj: response.data.assign })\r\n          displaySuccessMessage('Successfully updated!')\r\n        })\r\n        .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n\r\n\r\nexport const getAssignedListByFilter = ({\r\n  _id,\r\n  title,\r\n  worksheet,\r\n  assignedTo,\r\n  createdBy,\r\n  startTime,\r\n  endTime,\r\n}) => {\r\n  return (dispatch) => {\r\n    let filter = new Filter({\r\n      _id:        _id,\r\n      title:      title,\r\n      worksheet:  worksheet,\r\n      assignedTo: assignedTo,\r\n      createdBy:  createdBy,\r\n      startTime:  startTime,\r\n      endTime:    endTime,\r\n    });\r\n    let query = filter.buildQuery();\r\n\r\n    Axios\r\n      .get(`/assigns/filter${query}`)\r\n      .then(response => {\r\n        dispatch({ type: Types.FETCH_ASSIGNS_BY_FILTER, data: response.data.assignedList})\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n\r\nexport const deleteData = (assign) => {\r\n  return dispatch => {\r\n    Axios\r\n      .delete(`/assign/` + assign._id)\r\n      .then((response) => {\r\n        if(response.data.success) {\r\n          displaySuccessMessage(`Successfully deleted ${assign.title}!`)\r\n          dispatch({ type: Types.DELETE_ASSIGN, obj: assign});\r\n        } else {\r\n          displayErrorMessage(\"something went wrong!\")\r\n        }\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}","import axios from \"axios\"\r\nimport { history } from \"../../../history\"\r\n// Get Initial Emails\r\nexport const getEmails = routeParams => {\r\n  return async dispatch => {\r\n    await axios\r\n      .get(\"api/email/mails\", {\r\n        params: routeParams\r\n      })\r\n      .then(result => {\r\n        dispatch({\r\n          type: \"GET_MAILS\",\r\n          mails: result.data,\r\n          routeParams\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const StarEmail = id => {\r\n  return async dispatch => {\r\n    await axios\r\n      .post(\"/api/email/set-starred\", {\r\n        mailId: id\r\n      })\r\n      .then(result => {\r\n        dispatch({\r\n          type: \"SET_STARRED\",\r\n          mailId: id\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const searchMail = val => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: \"SEARCH_MAIL\",\r\n      query: val\r\n    })\r\n  }\r\n}\r\n\r\nexport const selectMail = id => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"SELECT_MAIL\",\r\n      id\r\n    })\r\n  }\r\n}\r\n\r\nexport const selectAllMails = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"SELECT_ALL_MAILS\"\r\n    })\r\n  }\r\n}\r\n\r\nexport const deselectAllMails = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"DESELECT_ALL_MAILS\"\r\n    })\r\n  }\r\n}\r\n\r\nexport const moveMail = (to, id) => {\r\n  return async (dispatch, getState) => {\r\n    const selectedEmails = !id ? getState().emailApp.mails.selectedEmails : [id]\r\n    const routeParams = getState().emailApp.mails.params\r\n    await axios\r\n      .post(\"/api/email/move-mails\", {\r\n        selectedEmails,\r\n        mailFolder: to\r\n      })\r\n      .then(() => {\r\n        dispatch({\r\n          type: \"MOVE_MAIL\"\r\n        })\r\n        dispatch(getEmails(routeParams))\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const unreadMails = unreadFlag => {\r\n  return async (dispatch, getState) => {\r\n    const selectedEmails = getState().emailApp.mails.selectedEmails\r\n    await axios\r\n      .post(\"api/email/mark-unread\", {\r\n        emailIds: selectedEmails,\r\n        unreadFlag: unreadFlag\r\n      })\r\n      .then(response => {\r\n        dispatch({\r\n          type: \"SET_UNREAD\",\r\n          unreadFlag,\r\n          id: selectedEmails\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n}\r\n\r\nexport const setLabel = label => {\r\n  return async (dispatch, getState) => {\r\n    const selectedEmails = getState().emailApp.mails.selectedEmails\r\n    const routeParams = getState().emailApp.mails.params\r\n    await axios\r\n      .post(\"/api/email/set-labels\", {\r\n        emailIds: selectedEmails,\r\n        label: label\r\n      })\r\n      .then(response => {\r\n        dispatch({ type: \"SET_LABELS\", label, response })\r\n        dispatch(getEmails(routeParams))\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const changeFilter = filter => {\r\n  return dispatch => {\r\n    dispatch({ type: \"CHANGE_FILTER\", filter })\r\n    history.push(`/email/${filter}`)\r\n    dispatch(getEmails({ filter }))\r\n  }\r\n}\r\n","import QueryBuilder from '../classess/QueryBuilder'\r\n\r\nclass Filter {\r\n  _id // id \r\n  topic // id of topic\r\n  level // id of level\r\n  question // string of question\r\n  category // string of category\r\n  isMCQ // boolean\r\n  createdBy // id of user\r\n  deleted // boolean\r\n\r\n  constructor(params) {\r\n    this._id = params._id\r\n    this.topic = params.topic\r\n    this.level = params.level\r\n    this.question = params.question\r\n    this.isMCQ = params.isMCQ\r\n    this.createdBy = params.createdBy\r\n    this.deleted = params.deleted;\r\n    this.category = params.category;\r\n  }\r\n\r\n  buildQuery = () => {\r\n    let query = new QueryBuilder('')\r\n    if(this._id) {\r\n      query.set('_id', this._id);\r\n    }\r\n    if(this.topic) {\r\n      query.set('topic', this.topic);\r\n    }\r\n    if(this.level) {\r\n      query.set('level', this.level);\r\n    }\r\n    if(this.question) {\r\n      query.set('question', this.question);\r\n    }\r\n    if(this.isMCQ) {\r\n      query.set('isMCQ', this.isMCQ);\r\n    }\r\n    if(this.createdBy) {\r\n      query.set('createdBy', this.createdBy);\r\n    }\r\n    if(this.deleted) {\r\n      query.set('deleted', this.deleted);\r\n    }\r\n    if(this.category) {\r\n      query.set('category', this.category);\r\n    }\r\n\r\n    var queryStr = query.get();\r\n    return queryStr;\r\n  }\r\n}\r\n\r\nexport default Filter;","import { history } from \"../../../history\";\r\nimport * as Types from \"../types\";\r\nimport { Axios } from \"../root\"\r\nimport { displaySuccessMessage, displayServerErrorMessage, displayInfo } from '../../../service/Alert';\r\nimport { subRooter  } from \"../../../configs/vars\";\r\nimport Filter from \"./filterClass\";\r\n\r\nexport const getData = (params) => {\r\n  if(params === null) {\r\n    params = {}\r\n    params.page     = 1\r\n    params.perPage  = 4\r\n  }\r\n  return async (dispatch, getState) => {\r\n    await Axios.get(`/assessments?page=${params.page}&perPage=${params.perPage}`).then(response => {\r\n      dispatch({\r\n        type: Types.FETCH_ASSESSMENTS,\r\n        data: response.data.assessments,\r\n        totalPages: response.data.totalPages,\r\n        params\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const addData = (obj) => {\r\n  return (dispatch, getState) => {\r\n    let params = getState().assessment.params;\r\n    let videos = obj.videos;\r\n\r\n    let formData = new FormData();\r\n    formData.append('question', obj.question);\r\n    formData.append('level', obj.level);\r\n    formData.append('youtubeUrl', obj.youtubeUrl);\r\n    formData.append('videos', videos[0]);\r\n    formData.append('description', obj.description);\r\n    formData.append('image', obj.image[0]);\r\n    formData.append('topic', obj.topic);\r\n    formData.append('isMCQ', obj.isMCQ);\r\n    formData.append('MCQs', JSON.stringify(obj.MCQs));\r\n    formData.append('mark', obj.mark);\r\n\r\n    Axios\r\n      .post(\"/assessment/create\", formData)\r\n      .then(response => {\r\n        dispatch({ type: Types.ADD_ASSESSMENT, obj: response.data.doc })\r\n        dispatch(getData(params));\r\n        displaySuccessMessage('Successfully uploaded new question!')\r\n        history.push(`${subRooter}/assessment`)\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n\r\nexport const getInitialData = () => {\r\n  return async (dispatch, getState) => {\r\n    await Axios.get(`/assessments`).then(response => {\r\n      dispatch({ type: Types.FETCH_ALL_ASSESSMENTS, data: response.data.assessments })\r\n    })\r\n  }\r\n}\r\n\r\nexport const filterData = (value, filterOption) => {\r\n  return dispatch => dispatch({ type: Types.FILTER_ASSESSMENT , value, filterOption })\r\n}\r\n\r\nexport const updateData = obj => {\r\n  return (dispatch, getState) => {\r\n    let params = getState().assessment.params;\r\n\r\n    let formData = new FormData();\r\n    formData.append('question', obj.question);\r\n    formData.append('youtubeUrl', obj.youtubeUrl);\r\n    formData.append('videos', obj.videos[0]);\r\n    formData.append('description', obj.description);\r\n    formData.append('level', obj.level);\r\n    formData.append('image', obj.image[0]);\r\n    formData.append('topic', obj.topic);\r\n    formData.append('isMCQ', obj.isMCQ);\r\n    formData.append('MCQs', JSON.stringify(obj.MCQs));\r\n    formData.append('mark', obj.mark);\r\n\r\n    Axios\r\n      .put(\"/assessment/\" + obj._id, formData)\r\n      .then(response => {\r\n        dispatch({ type: Types.UPDATE_ASSESSMENT, obj })\r\n        dispatch(getData(params));\r\n        displaySuccessMessage('Successfully updated!')\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n\r\nexport const getDatabyFilter = (params) => {\r\n  return async (dispatch, getState) => {\r\n    let filter = new Filter(params);\r\n    let query = filter.buildQuery();\r\n    await Axios.get(`/assessments/filter` + query).then(response => {\r\n      dispatch({\r\n        type: Types.FILTER_ASSESSMENT_BY_QUERY,\r\n        data: response.data.assessments,\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const getMyData = (params) => {\r\n  return async (dispatch) => {\r\n    let filter, query = \"\";\r\n\r\n    if(params) {\r\n      filter = new Filter(params);\r\n      query = filter.buildQuery(params);\r\n    }\r\n    await Axios.get(`/tutor/assessments${query}`)\r\n      .then(response => {\r\n        dispatch({\r\n          type: Types.FETCH_ALL_MY_ASSESSMENT,\r\n          data: response.data.assessments,\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport const deleteData = obj => {\r\n  return dispatch => {\r\n    \r\n    Axios\r\n      .delete(\"/assessment/\" + obj._id)\r\n      .then(response => {\r\n        dispatch({ type: Types.DELETE_ASSESSMENT, obj })\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\nexport const deleteDataByIds = ids => {\r\n  return dispatch => {\r\n    \r\n    Axios\r\n      .put(\"/assessment-delete\", {\r\n        ids\r\n      })\r\n      .then(response => {\r\n        const deletedIds  = response.data.deletedIds\r\n        const relatedData = response.data.relatedData\r\n\r\n        if(deletedIds.length > 0) {\r\n          displaySuccessMessage(`Successfully deleted ${deletedIds.length} data!`)\r\n        }\r\n        if(relatedData.length > 0) {\r\n          displayInfo(`${relatedData.length} data ${relatedData.length > 1 ? \"have\" : \"has\"} relevant data.`);\r\n        }\r\n\r\n        dispatch({ type: Types.DELETE_ASSESSMENTS, ids: deletedIds })\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/card-image-6.bcb47f73.jpg\";","import React, { Component, Fragment } from 'react'\r\nimport {Recorder} from 'react-voice-recorder'\r\nimport 'react-voice-recorder/dist/index.css'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport class AudioRecorder extends Component {\r\n    static propTypes = {\r\n        onClickUpload: PropTypes.func,\r\n    }\r\n\r\n    state = {\r\n        audioDetails: {\r\n            url: null,\r\n            blob: null,\r\n            chunks: null,\r\n            duration: {\r\n              h: 0,\r\n              m: 0,\r\n              s: 0\r\n            }\r\n          }\r\n    }\r\n    \r\n    handleAudioStop = (data) =>{\r\n        console.log(data)\r\n        this.setState({ audioDetails: data });\r\n    }\r\n\r\n    handleAudioUpload = (file) => {\r\n        this.props.onClickUpload(file)\r\n    }\r\n\r\n    handleRest() {\r\n        const reset = {\r\n          url: null,\r\n          blob: null,\r\n          chunks: null,\r\n          duration: {\r\n            h: 0,\r\n            m: 0,\r\n            s: 0\r\n          }\r\n        };\r\n        this.setState({ audioDetails: reset });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Recorder\r\n                    record={true}\r\n                    title={\"Recording An Answer\"}\r\n                    audioURL={this.state.audioDetails.url}\r\n                    showUIAudio\r\n                    handleAudioStop={data => this.handleAudioStop(data)}\r\n                    handleAudioUpload={data => this.handleAudioUpload(data)}\r\n                    handleRest={() => this.handleRest()}\r\n                 />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AudioRecorder\r\n","import * as Types from \"../types\";\r\nimport { Axios } from \"../root\"\r\nimport { displaySuccessMessage, displayServerErrorMessage } from '../../../service/Alert';\r\n// import config from \"../../../configs/config\";\r\n// import { subRooter  } from \"../../../configs/vars\";\r\n\r\n\r\nexport const submitMCQAnswer = ({ assignId, assessmentId, selectedIndex  }) => {\r\n  return  dispatch => {\r\n    Axios\r\n      .put(`/answer/user/MCQ/${assignId}`, {\r\n        assessmentId:   assessmentId,\r\n        selectedIndex:  selectedIndex\r\n      })\r\n      .then(response => {\r\n        // dispatch({ type: Types.ADD_ASSIGN, obj: response.data.assign })\r\n        dispatch(getAnswersOfAssign(assignId, assessmentId))\r\n        displaySuccessMessage('Successfully assigned!')\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n\r\nexport const submitTextAnswer = (assignId, assessmentId, textAnswer) => {\r\n  return  dispatch => {\r\n    Axios\r\n      .put(`/answer/user/TEXT/${assignId}`, {\r\n        assessmentId:   assessmentId,\r\n        textAnswer:  textAnswer\r\n      })\r\n      .then(response => {\r\n        // dispatch({ type: Types.ADD_ASSIGN, obj: response.data.assign })\r\n        dispatch(getAnswersOfAssign(assignId, assessmentId))\r\n        displaySuccessMessage('Successfully assigned!')\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n\r\nexport const submitVoiceAnswer = ({assignId, assessmentId, voiceBlobFile}) => {\r\n  var  formData = new FormData();\r\n  formData.append(\"assignId\",       assignId);\r\n  formData.append(\"assessmentId\",   assessmentId);\r\n  formData.append(\"voiceFile\",  voiceBlobFile);\r\n\r\n  return dispatch => {\r\n    Axios\r\n      .put(`/answer/user/voice/${assignId}`, formData)\r\n      .then(response => {\r\n        dispatch(getAnswersOfAssign(assignId, assessmentId))\r\n        displaySuccessMessage('Successfully assigned!')\r\n      })\r\n      .catch(displayServerErrorMessage)\r\n  }\r\n}\r\n\r\nexport const getAnswersOfAssign = (assignId, assessmentId) => {\r\n  return dispatch => {\r\n    Axios\r\n      .get(`/answer/user/${assignId}/${assessmentId}`)\r\n      .then(response => {\r\n        dispatch({ \r\n          type: Types.FETCH_ASSIGN_ANSWER, \r\n          obj: response.data.answers,\r\n          assignId: assignId, \r\n          assessmentId: assessmentId\r\n        })\r\n      })\r\n      .catch(console.error)\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  MessageSquare,\r\n  Check\r\n} from \"react-feather\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Input,\r\n  TabContent, TabPane, Nav, NavItem, NavLink,\r\n  Badge\r\n} from \"reactstrap\"\r\nimport htmlParser from \"html-react-parser\"\r\nimport YouTubePlayer from \"react-player/lib/players/YouTube\";\r\nimport classnames from \"classnames\";\r\nimport ReactAudioPlayer from \"react-audio-player\";\r\n\r\nimport AudioRecorder from '../../../../components/Wrappers/AudioRecorder'\r\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\"\r\nimport '../../../../assets/scss/custompages/myworksheet/components/AssignItem.scss'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { submitMCQAnswer, submitVoiceAnswer, submitTextAnswer, getAnswersOfAssign } from \"../../../../redux/actions/answer/\"\r\n\r\n\r\nclass AssignItem extends Component {\r\n  static getDerivedStateFromProps(props, state) {\r\n    if(!Object.is(props.answers, state.answers)) {\r\n      return {\r\n        answers: props.answers\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  static propTypes = {\r\n    currentQuestion: PropTypes.object,\r\n    assignItem: PropTypes.object,\r\n    answers: PropTypes.array,\r\n  }\r\n  \r\n  state = {\r\n    checkedMCQIndex: null,\r\n    answerText: \"\",\r\n    active: \"1\",\r\n    answers: [],\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.props.assignItem, this.props.currentQuestion) {\r\n      return this.props.getAnswersOfAssign(this.props.assignItem._id, this.props.currentQuestion._id);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(!Object.is(prevProps.assignItem, this.props.assignItem)\r\n      && this.props.currentQuestion \r\n      && this.props.currentQuestion._id) {\r\n      return this.props.getAnswersOfAssign(prevProps.assignItem._id, this.props.currentQuestion._id);\r\n    }\r\n\r\n    if(!Object.is(this.props.currentQuestion, prevProps.currentQuestion) \r\n      &&  this.props.currentQuestion && this.props.currentQuestion._id) {\r\n      return this.props.getAnswersOfAssign(prevProps.assignItem._id, this.props.currentQuestion._id);\r\n    }\r\n  }\r\n\r\n  handleSelectCorrectMCQ = (index) => {\r\n    this.setState({\r\n      checkedMCQIndex: index\r\n    })\r\n  }\r\n\r\n  handleVoiceUpload = (Bolbfile) => {\r\n    // upload\r\n    this.props.submitVoiceAnswer({\r\n      assignId: this.props.assignItem._id, \r\n      assessmentId: this.props.currentQuestion._id,\r\n      voiceBlobFile: Bolbfile\r\n    })\r\n  }\r\n\r\n  handleSubmitMCQ = () => {\r\n    this.props.submitMCQAnswer({\r\n      assignId:       this.props.assignItem._id,\r\n      assessmentId:   this.props.currentQuestion._id,\r\n      selectedIndex:  this.state.checkedMCQIndex\r\n    })\r\n  }\r\n\r\n  handleSubmitText = () => {\r\n    this.props.submitTextAnswer( this.props.assignItem._id, this.props.currentQuestion._id, this.state.answerText,\r\n    )\r\n  }\r\n\r\n  textAnswer = (e) => {\r\n    this.setState({\r\n      answerText: e.target.value\r\n    });\r\n  }\r\n  \r\n  toggle = tab => {\r\n    if (this.state.active !== tab) {\r\n      this.setState({ active: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { currentQuestion } = this.props;\r\n    const { checkedMCQIndex, answerText, answers } = this.state;\r\n    const currentAnswer = answers.find((elt) => elt.assessment === currentQuestion._id);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {\r\n          currentAnswer && <div className=\"text-right\">\r\n            <Badge pill className=\"badge-glow\" color=\"info\">Answered</Badge>\r\n          </div>\r\n        }\r\n        <Row className=\"mb-5\">\r\n          <Col\r\n            className=\"d-flex mb-2 mb-md-0\"\r\n            sm=\"12\"\r\n            md=\"5\"\r\n          >\r\n            <ul className=\"list-unstyled\">\r\n              <li>\r\n              {\r\n                currentQuestion.imgUrl \r\n                && \r\n                <img src={currentQuestion.imgUrl} alt=\"img\" width=\"100%\" \r\n                  style={{borderRadius: 10, border: \"2px solid\"}}\r\n                />\r\n              }\r\n              </li>\r\n              <li>\r\n              {\r\n                currentQuestion.videos && currentQuestion.videos.length > 0 && currentQuestion.videos[0]  \r\n                  && \r\n                  <video src={currentQuestion.videos[0]} alt=\"Video\" width=\"100%\" \r\n                    controls\r\n                    className=\"mt-1\"\r\n                  />\r\n              }\r\n              </li>\r\n              <li>\r\n                {\r\n                  currentQuestion.youtubeUrl && <YouTubePlayer url={currentQuestion.youtubeUrl} />\r\n                }\r\n              </li>\r\n            </ul>\r\n          </Col>\r\n          <Col md=\"7\" sm=\"12\">\r\n            <h3>{currentQuestion.question}</h3>\r\n            <div className=\"text-muted\">\r\n              <div className=\"\" style={{display: \"flow-root\"}}>\r\n                <p className=\"float-left m-0\">by {currentQuestion.createdBy.firstname} {currentQuestion.createdBy.lastname}</p>\r\n                <p className=\"float-right m-0 text-success\">Mark: {currentQuestion.mark}</p>\r\n              </div>\r\n            </div>\r\n            <hr />  \r\n            <p className=\"my-50\">\r\n              <span>{currentQuestion.level.name}</span>\r\n              <span className=\"mx-50\">-</span>\r\n              <span className=\"text-success\">{currentQuestion.topic.categoryId.name}</span>\r\n              <span className=\"mx-50\">-</span>\r\n              <span className=\"text-success\">{currentQuestion.topic.name}</span>\r\n            </p>\r\n            <hr className=\"mt-0\" />\r\n            <div>{htmlParser(currentQuestion.description)}</div>\r\n            <hr />\r\n            {/* answer section */}\r\n            {\r\n              currentAnswer && \r\n                <div className=\"text-right\">\r\n                  {\r\n                    currentAnswer.isCorrect === true \r\n                    \r\n                      ? <Badge pill className=\"badge-glow\" color=\"success\">Correct({currentAnswer.mark})</Badge>\r\n                      : (\r\n                        currentAnswer.isCorrect === undefined\r\n                        ? <Badge pill className=\"badge-glow\" color=\"primary\">Not marked yet</Badge>\r\n                        : <Badge pill className=\"badge-glow\" color=\"waring\">Wrong({currentAnswer.mark})</Badge>\r\n                      )\r\n                  }\r\n                </div>\r\n            }\r\n            {/* isMCQ */}\r\n            {\r\n              currentQuestion.isMCQ \r\n                ?\r\n                  <div>\r\n                    <ul className=\"list-unstyled\">\r\n                      <li><span className=\"text-info font-medium-2\">Select correct answer</span></li>\r\n                      {\r\n                        currentAnswer\r\n                          ? \r\n                            currentQuestion.MCQs.map((mcq, index) => (\r\n                              <li key={index} className=\"pl-2\">\r\n                                  {/* <span  className=\"float-left\">{mcq.text}</span> */}\r\n                                <Checkbox\r\n                                  color=\"primary\"\r\n                                  icon={<Check className=\"vx-icon\" size={16} />}\r\n                                  label={mcq.text}\r\n                                  checked={currentAnswer.selectedIndex === mcq.index}\r\n                                  onChange={() => this.handleSelectCorrectMCQ(mcq.index)}\r\n                                  disabled={true}\r\n                                />\r\n                              </li>\r\n                            ))\r\n                          : \r\n                            currentQuestion.MCQs.map((mcq, index) => (\r\n                              <li key={index} className=\"pl-2\">\r\n                                  {/* <span  className=\"float-left\">{mcq.text}</span> */}\r\n                                <Checkbox\r\n                                  color=\"primary\"\r\n                                  icon={<Check className=\"vx-icon\" size={16} />}\r\n                                  label={mcq.text}\r\n                                  checked={checkedMCQIndex === mcq.index}\r\n                                  onChange={() => this.handleSelectCorrectMCQ(mcq.index)}\r\n                                />\r\n                              </li>\r\n                            ))\r\n                      }\r\n                    </ul>\r\n                    <div className=\"action-btns mt-1 text-right\">\r\n                      <Button.Ripple className=\"mr-1 mb-1\" color=\"primary\"\r\n                        onClick={() => this.handleSubmitMCQ()}\r\n                        disabled={!!currentAnswer}\r\n                      >\r\n                        <MessageSquare size={15} />\r\n                        <span className=\"align-middle ml-50\">Submit Answer</span>\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </div>\r\n                : \r\n                <div>\r\n                  <Nav tabs>\r\n                    <NavItem>\r\n                      <NavLink\r\n                        className={classnames({\r\n                          active: this.state.active === \"1\"\r\n                        })}\r\n                        onClick={() => {\r\n                          this.toggle(\"1\")\r\n                        }}\r\n                      >\r\n                        Text Answer\r\n                      </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                      <NavLink\r\n                        className={classnames({\r\n                          active: this.state.active === \"2\"\r\n                        })}\r\n                        onClick={() => {\r\n                          this.toggle(\"2\")\r\n                        }}\r\n                      >\r\n                        Voice Answer\r\n                      </NavLink>\r\n                    </NavItem>\r\n                  </Nav>\r\n                  <TabContent activeTab={this.state.active}>\r\n                    <TabPane tabId=\"1\">\r\n                      <div className=\"my-1\">\r\n                        <p>\r\n                          Write your answer here\r\n                        </p>\r\n                        <Input type=\"textarea\" name=\"text\" id=\"text-answer\" rows=\"3\" placeholder=\"your answer\" value={currentAnswer ? currentAnswer.textAnswer : answerText}\r\n                          onChange={(e) => this.textAnswer(e)}\r\n                          readOnly={currentAnswer}\r\n                        />\r\n                        <div className=\"action-btns mt-1 text-right\">\r\n                          <Button.Ripple className=\"mr-1 mb-1\" color=\"primary\"\r\n                            onClick={() => this.handleSubmitText()}\r\n                            disabled={currentAnswer}\r\n                          >\r\n                            <MessageSquare size={15} />\r\n                            <span className=\"align-middle ml-50\">Submit Answer</span>\r\n                          </Button.Ripple>\r\n                        </div>\r\n                      </div>\r\n                    </TabPane>\r\n                    <TabPane tabId=\"2\">\r\n                      <div>\r\n                        {\r\n                          currentAnswer === null \r\n                          ?\r\n                            <AudioRecorder \r\n                              onClickUpload={(file) => this.handleVoiceUpload(file)}\r\n                            />\r\n                          : \r\n                            <ReactAudioPlayer\r\n                              src={currentAnswer && currentAnswer.voiceUrl}\r\n                              controls\r\n                            />\r\n                        }\r\n                      </div>\r\n                    </TabPane>\r\n                  </TabContent>\r\n              </div>\r\n            }\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    answers: state.answer.answers\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  submitMCQAnswer,\r\n  submitTextAnswer,\r\n  submitVoiceAnswer,\r\n  getAnswersOfAssign\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AssignItem)","import React from \"react\"\r\nimport {\r\n  ArrowLeft,\r\n  HelpCircle,\r\n} from \"react-feather\"\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  Collapse,\r\n  ListGroup,\r\n  ListGroupItem\r\n} from \"reactstrap\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport Classnames from \"classnames\"\r\nimport { connect } from \"react-redux\"\r\nimport { AiOutlineExclamation } from \"react-icons/ai\"\r\nimport { matchYMD } from \"../../../service/helper\"\r\nimport { getDatabyFilter } from \"../../../redux/actions/assessment/\"\r\nimport AssignItem from \"./Components/AssignItem\"\r\n\r\nclass EmailDetails extends React.Component {\r\n  static getDerivedStateFromProps(props, state){\r\n    if(props.queryAssessments.length > 0 && ! Object.is(props.queryAssessments[0], state.currentQuestion) ) {\r\n\r\n      return {\r\n        currentQuestion: props.queryAssessments[0]\r\n      }\r\n    }\r\n\r\n    return null \r\n  }\r\n\r\n  state = {\r\n    showReplies: false,\r\n    collapseID: \"\",\r\n    currentQuestionId: null,\r\n    currentQuestion: null\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  handleSelectQuestion = (item) => {\r\n    if(item._id !== this.state.currentQuestionId)  {\r\n      this.props.getDatabyFilter({\r\n        _id: item._id\r\n      });\r\n\r\n      this.setState({\r\n        currentQuestionId: item._id,\r\n        collapseID: \"2\"\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let currentAssign = this.props.currentAssign;\r\n    let { currentQuestion } = this.state;\r\n\r\n    if(currentAssign === null) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={`email-app-details ${\r\n          this.props.currentStatus ? \"show\" : \"\"\r\n        }`}\r\n      >\r\n        <div className=\"email-detail-header\">\r\n          <div className=\"email-header-left d-flex align-items-center mb-1\">\r\n            <ArrowLeft\r\n              size={20}\r\n              className=\"mr-1 cursor-pointer\"\r\n              onClick={() => {\r\n                this.props.handleEmailDetails(\"close\")\r\n              }}\r\n            />\r\n            <h4 className=\"mb-0 pl-2\">{currentAssign.title}</h4>\r\n          </div>\r\n        </div>\r\n        <PerfectScrollbar\r\n          className=\"email-scroll-area p-0\"\r\n          options={{\r\n            wheelPropagation: false\r\n          }}\r\n        >\r\n          <Card className=\"px-1 pb-2\">\r\n            <CardHeader className=\"email-detail-head ml-75 border-0\">\r\n              <div className=\"user-details d-flex justify-content-between align-items-center flex-wrap\">\r\n                <span>{currentAssign.worksheet && currentAssign.worksheet.name}</span>\r\n              </div>\r\n              <div className=\"mail-meta-item\">\r\n                <div className=\"mail-time mb-1\">{currentAssign.createdAt && matchYMD(currentAssign.createdAt)}</div>\r\n                <div className=\"mail-date mb-1\">\r\n                  {currentAssign.createdBy.firstname} {currentAssign.createdBy.lastname}\r\n                </div>\r\n              </div>\r\n            </CardHeader>\r\n            <p>{currentAssign.description}</p>\r\n            <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate collapse-border\" style={{background: \"aliceblue\"}}>\r\n              <Card\r\n                className=\"collapse-border-item\"\r\n                key={\"1\"}\r\n              >\r\n                <CardHeader\r\n                  onClick={() => this.toggleCollapse(\"1\")}\r\n                >\r\n                  <CardTitle className=\"lead collapse-title collapsed\">\r\n                    <div className=\"mail-attachements d-flex\">\r\n                      <HelpCircle size={22} />\r\n                      <span className=\"ml-50\">Questions</span>\r\n                    </div>\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <Collapse\r\n                  isOpen={\"1\" === this.state.collapseID}\r\n                  onEntering={this.onEntering}\r\n                  onEntered={this.onEntered}\r\n                  onExiting={this.onExiting}\r\n                  onExited={this.onExited}\r\n                >\r\n                  <CardBody className=\"mail-message-wrapper pt-2 mb-0\">\r\n                    {\r\n                      currentAssign.worksheet.assessments && currentAssign.worksheet.assessments.length > 0 \r\n                      && <ListGroup flush> \r\n                      {\r\n                        currentAssign.worksheet.assessments.map((assessment) => \r\n                          <ListGroupItem key={assessment._id} \r\n                            className={`pl-2 ${Classnames({\r\n                              \"active\": this.state.currentQuestionId === assessment._id\r\n                            })}`}\r\n                            onClick={() => this.handleSelectQuestion(assessment)}\r\n                          >\r\n                          {\r\n                            assessment.question\r\n                          }\r\n                          </ListGroupItem>\r\n                        ) \r\n                      }\r\n                      </ListGroup> \r\n                    }\r\n                  </CardBody>\r\n                </Collapse>\r\n              </Card>\r\n\r\n              {/* answer */}\r\n              <Card\r\n                className=\"collapse-border-item\"\r\n                key={\"2\"}\r\n              >\r\n                <CardHeader\r\n                  onClick={() => this.toggleCollapse(\"2\")}\r\n                >\r\n                  <CardTitle className=\"lead collapse-title collapsed\">\r\n                    <div className=\"mail-attachements d-flex\">\r\n                      <AiOutlineExclamation size={22} />\r\n                      <span className=\"ml-50\">Your Answer</span>\r\n                    </div>\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <Collapse\r\n                  isOpen={\"2\" === this.state.collapseID}\r\n                  onEntering={this.onEntering}\r\n                  onEntered={this.onEntered}\r\n                  onExiting={this.onExiting}\r\n                  onExited={this.onExited}\r\n                >\r\n                  <div className=\"overflow-hidden app-ecommerce-details\">\r\n                    <CardBody className=\"pb-0\">\r\n                    {\r\n                      currentQuestion && <AssignItem currentQuestion={currentQuestion} assignItem={currentAssign} />\r\n                    }\r\n                    </CardBody>\r\n                  </div>\r\n                </Collapse>\r\n              </Card>\r\n            </div>\r\n          </Card>\r\n        </PerfectScrollbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    queryAssessments: state.assessment.queryData,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getDatabyFilter\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmailDetails)","import React from \"react\"\r\nimport {\r\n  FormGroup,\r\n  Input,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  Card,\r\n  CardTitle,\r\n  CardImg,\r\n  CardImgOverlay,\r\n  Row,\r\n  Col,\r\n  Button\r\n} from \"reactstrap\"\r\nimport {\r\n  Search,\r\n  Check,\r\n  Folder,\r\n  Edit2,\r\n  Info,\r\n  Trash,\r\n  Tag,\r\n  Mail,\r\n  ChevronsRight\r\n} from \"react-feather\"\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\r\nimport { connect } from \"react-redux\" \r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  getEmails,\r\n  StarEmail,\r\n  searchMail,\r\n  moveMail,\r\n  selectMail,\r\n  selectAllMails,\r\n  deselectAllMails,\r\n  unreadMails,\r\n  setLabel\r\n} from \"../../../redux/actions/email/index\"\r\nimport { matchYMD } from \"../../../service/helper\"\r\nimport { getAssignedListByFilter } from \"../../../redux/actions/assigned\"\r\n\r\n\r\n\r\nimport Checkbox from \"../../../components/@vuexy/checkbox/CheckboxesVuexy\"\r\nimport EmailDetails from \"./AssignDetails\"\r\nimport overlayImg1 from \"../../../assets/img/pages/card-image-6.jpg\"\r\n\r\nclass EmailList extends React.Component {\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if(!Object.is(prevState.assignedList && nextProps.assignedList)){\r\n      return {\r\n        assignedList: nextProps.assignedList\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  static propTypes = {\r\n    getAssignedListByFilter: PropTypes.func, // get assign\r\n    assignedList: PropTypes.array\r\n  }\r\n\r\n  state = {\r\n    mails: [],\r\n    emailDetailsVisibility: false,\r\n    selectAll: false,\r\n    currentAssign: null,\r\n    value: \"\",\r\n    currentFilter: this.props.routerProps.match.params.filter,\r\n    \r\n    assignedList:   [],\r\n    selectedAssign: null,\r\n    detailsVisibility: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.props.auth.userinfo) {\r\n      this.props.getAssignedListByFilter({\r\n        assignedTo: this.props.auth.userinfo.id\r\n      });\r\n    }\r\n  }\r\n\r\n  handleEmailDetails = (status, assign) => {\r\n    if (status === \"open\")\r\n      this.setState({ emailDetailsVisibility: true, currentAssign: assign })\r\n    else this.setState({ emailDetailsVisibility: false, currentAssign: null})\r\n  }\r\n\r\n  handleOnChange = e => {\r\n    this.setState({ value: e.target.value })\r\n    this.props.searchMail(e.target.value)\r\n  }\r\n\r\n  getFilteredAssignList = () => {\r\n    let value = this.state.value ;\r\n    if(value && value.length > 0) {\r\n      let filteredAssignList = this.state.assignedList.filter((item) => {\r\n        let createrName = `${item.createdBy.firstname} ${item.createdBy.lastname}`\r\n        let startsWithCondition = \r\n          item.title.toLowerCase().startsWith(value.toLowerCase()) || \r\n          item.worksheet.name.toLowerCase().startsWith(value.toLowerCase()) || \r\n          createrName.toLowerCase().startsWith(value.toLowerCase());\r\n\r\n        let includesCondition = \r\n          item.title.toLowerCase().includes(value.toLowerCase()) || \r\n          item.worksheet.name.toLowerCase().includes(value.toLowerCase()) || \r\n          createrName.toLowerCase().includes(value.toLowerCase())\r\n\r\n        if (startsWithCondition) {\r\n          return startsWithCondition\r\n        } else if (!startsWithCondition && includesCondition) {\r\n          return includesCondition\r\n        }\r\n        return false;\r\n      });\r\n\r\n      return filteredAssignList\r\n    } else {\r\n      return this.state.assignedList\r\n    }\r\n  }\r\n  render() {\r\n    const { \r\n      currentFilter,\r\n      value\r\n    } = this.state\r\n    \r\n    const assignedList = this.getFilteredAssignList();\r\n\r\n    console.log(\"assignedList\", assignedList);\r\n    \r\n    const renderMails =\r\n      assignedList.length > 0 ? (\r\n        assignedList.map((item, index) => {\r\n          return (\r\n            <Col lg=\"3\" md=\"4\" sm=\"6\"  key={index}>\r\n                <Card className=\"text-white overlay-img-card\">\r\n                  <CardImg src={overlayImg1} alt=\"overlay img\" />\r\n                  <CardImgOverlay className=\"overlay-black d-flex flex-column justify-content-between\">\r\n                    <CardTitle className=\"text-white\">{item.worksheet.name}</CardTitle>\r\n                    <div className=\"  \" style={{display: 'inline-grid'}}>\r\n                      <div>\r\n                        <p className=\"m-0 float-left\">Title:</p>\r\n                        <p className=\"m-0 float-right\">{item.title}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div style={{display: \"inline-grid\"}}>\r\n                      <div>\r\n                        <p className=\"m-0 float-left\">Created At:</p>\r\n                        <p className=\"m-0 float-right\">{matchYMD(item.createdAt)}</p>\r\n                      </div>\r\n                      <div>\r\n                        <p className=\"m-0 float-left\">Created By:</p>\r\n                        <p className=\"m-0 float-right\">{item.createdBy.firstname +  \" \" + item.createdBy.lastname}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-right  \">\r\n                      <Button.Ripple className=\"mr-1 mb-1\" outline color=\"primary\"\r\n                         onClick={() => {\r\n                          this.handleEmailDetails(\"open\", item)\r\n                        }}\r\n                      >\r\n                        View\r\n                        <ChevronsRight size={14} />\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </CardImgOverlay>\r\n                </Card>\r\n              </Col>\r\n          )\r\n        })\r\n      ) : (\r\n        <div className=\"no-results show\">\r\n          <h5>No WorkSheet Found</h5>\r\n        </div>\r\n      )\r\n\r\n    return (\r\n      <div className=\"content-right w-100 border-0\">\r\n        <div className=\"email-app-area\">\r\n          <div className=\"email-app-list-wrapper\">\r\n            <div className=\"email-app-list\">\r\n              <div className=\"app-fixed-search mb-2\" style={{borderRadius: 20}}>\r\n                <FormGroup className=\"position-relative has-icon-left m-0 d-inline-block d-lg-block\">\r\n                  <Input\r\n                    placeholder=\"Search WorkSheet\"\r\n                    onChange={e => {\r\n                      this.handleOnChange(e)\r\n                    }}\r\n                    value={value}\r\n                  />\r\n                  <div className=\"form-control-position\">\r\n                    <Search size={15} />\r\n                  </div>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"app-action\" style={{display: 'none'}}>\r\n                <div className=\"action-left\">\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    icon={<Check className=\"vx-icon\" size={16} />}\r\n                    label=\"Select All\"\r\n                    checked={\r\n                      this.props.email.selectedEmails.length ? true : false\r\n                    }\r\n                    onChange={e => e.stopPropagation()}\r\n                    onClick={e => {\r\n                      e.target.checked\r\n                        ? this.props.selectAllMails()\r\n                        : this.props.deselectAllMails()\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"action-right\">\r\n                  <ul className=\"list-inline m-0\">\r\n                    <li className=\"list-inline-item\">\r\n                      <UncontrolledDropdown>\r\n                        <DropdownToggle tag=\"div\">\r\n                          <Folder size={22} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            onClick={() => {\r\n                              if (currentFilter === \"inbox\")\r\n                                this.props.moveMail(\"draft\")\r\n                              else this.props.moveMail(\"inbox\")\r\n                            }}\r\n                          >\r\n                            <Edit2 size={18} className=\"mr-50\" />\r\n                            <span className=\"align-middle font-medium-1\">\r\n                              {currentFilter === \"inbox\" ? \"Draft\" : \"Inbox\"}\r\n                            </span>\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            onClick={() => {\r\n                              this.props.moveMail(\"spam\")\r\n                            }}\r\n                          >\r\n                            <Info size={18} className=\"mr-50\" />\r\n                            <span className=\"align-middle font-medium-1\">\r\n                              Spam\r\n                            </span>\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            onClick={() => {\r\n                              this.props.moveMail(\"trash\")\r\n                            }}\r\n                          >\r\n                            <Trash size={18} className=\"mr-50\" />\r\n                            <span className=\"align-middle font-medium-1\">\r\n                              Trash\r\n                            </span>\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </li>\r\n                    <li className=\"list-inline-item\">\r\n                      <UncontrolledDropdown>\r\n                        <DropdownToggle tag=\"div\">\r\n                          <Tag size={22} />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <DropdownItem\r\n                            className=\"font-medium-1\"\r\n                            onClick={() => this.props.setLabel(\"personal\")}\r\n                          >\r\n                            <span className=\"bullet bullet-success bullet-sm mr-1\" />\r\n                            <span className=\"align-middle\">Personal</span>\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            className=\"font-medium-1\"\r\n                            onClick={() => this.props.setLabel(\"company\")}\r\n                          >\r\n                            <span className=\"bullet bullet-primary bullet-sm mr-1\" />\r\n                            <span className=\"align-middle\">Company</span>\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            className=\"font-medium-1\"\r\n                            onClick={() => this.props.setLabel(\"important\")}\r\n                          >\r\n                            <span className=\"bullet bullet-warning bullet-sm mr-1\" />\r\n                            <span className=\"align-middle\">Important</span>\r\n                          </DropdownItem>\r\n                          <DropdownItem\r\n                            className=\"font-medium-1\"\r\n                            onClick={() => this.props.setLabel(\"private\")}\r\n                          >\r\n                            <span className=\"bullet bullet-danger bullet-sm mr-1\" />\r\n                            <span className=\"align-middle\">Private</span>\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </li>\r\n                    <li\r\n                      className=\"list-inline-item mail-unread\"\r\n                      onClick={() => this.props.unreadMails(true)}\r\n                    >\r\n                      <span className=\"action-icon\">\r\n                        <Mail size={22} />\r\n                      </span>\r\n                    </li>\r\n                    <li\r\n                      className=\"list-inline-item mail-delete\"\r\n                      onClick={() => {\r\n                        this.props.moveMail(\"trash\")\r\n                      }}\r\n                    >\r\n                      <span className=\"action-icon\">\r\n                        <Trash size={22} />\r\n                      </span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              <PerfectScrollbar\r\n                className=\"email-user-list list-group\"\r\n                options={{\r\n                  wheelPropagation: false\r\n                }}\r\n                style={{height: \"calc(100vh - 15.5rem)\"}}\r\n              >\r\n                <Row className=\"w-100\"> \r\n                { renderMails }\r\n                </Row>\r\n              </PerfectScrollbar>\r\n            </div>\r\n          </div>\r\n          <EmailDetails\r\n            handleEmailDetails={this.handleEmailDetails}\r\n            currentStatus={this.state.emailDetailsVisibility}\r\n            currentAssign={this.state.currentAssign}\r\n            toggleStarred={this.props.StarEmail}\r\n            setLabel={this.props.setLabel}\r\n            unreadMails={this.props.unreadMails}\r\n            currentParam={this.props.routerProps.match.params}\r\n            moveMail={this.props.moveMail}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    email: state.emailApp.mails,\r\n    starred: state.emailApp.starred,\r\n\r\n\r\n    assignedList: state.assigned.filteredList,\r\n    auth: state.auth\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {\r\n  getEmails,\r\n  StarEmail,\r\n  searchMail,\r\n  moveMail,\r\n  selectMail,\r\n  selectAllMails,\r\n  deselectAllMails,\r\n  unreadMails,\r\n  setLabel,\r\n\r\n  getAssignedListByFilter,\r\n\r\n})(EmailList)\r\n","import React from \"react\"\r\nimport EmailList from \"./AssignList\"\r\nimport \"../../../assets/scss/pages/app-email.scss\"\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\"\r\n\r\nconst mql = window.matchMedia(`(min-width: 992px)`)\r\n\r\nclass Email extends React.Component {\r\n  state = {\r\n    composeMailStatus: false,\r\n    sidebarDocked: mql.matches,\r\n    sidebarOpen: false\r\n  }\r\n  handleComposeSidebar = status => {\r\n    if (status === \"open\") {\r\n      this.setState({\r\n        composeMailStatus: true\r\n      })\r\n    } else {\r\n      this.setState({\r\n        composeMailStatus: false\r\n      })\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    mql.addListener(this.mediaQueryChanged)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    mql.removeListener(this.mediaQueryChanged)\r\n  }\r\n\r\n  onSetSidebarOpen = open => {\r\n    this.setState({ sidebarOpen: open })\r\n  }\r\n\r\n  mediaQueryChanged = () => {\r\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false })\r\n  }\r\n\r\n  handleMainAndComposeSidebar = () => {\r\n    this.handleComposeSidebar(\"close\")\r\n    this.onSetSidebarOpen(false)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"My Worksheets\"\r\n          breadCrumbParent=\"Datas\"\r\n          breadCrumbActive=\"My Worksheets\"\r\n        />\r\n        <div className=\"email-application position-relative\">\r\n          <EmailList\r\n            mainSidebar={this.onSetSidebarOpen}\r\n            routerProps={this.props}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n\r\n    )\r\n  }\r\n}\r\nexport default Email\r\n"],"sourceRoot":""}